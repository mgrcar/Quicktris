<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><!-- ###################################################################### --><!-- ###################################################################### --><!-- ###################################################################### --><!-- ###################################################################### --><head>


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->


<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->


<title>Tetris</title>


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->


<link rel="icon" href="http://colinfahey.com/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://colinfahey.com/favicon.ico" type="image/x-icon">


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->


<meta name="keywords" content="Colin Fahey, Tetris">
<meta name="description" content="Tetris">
<meta name="author" content="Colin Fahey">


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->


<style type="text/css" media="all">
<!--

body, p, h1, h2, h3, h4, h5, h6, a, table, tr, td, div, ul, ol, li, pre
{
font-family: verdana,arial,helvetica,sans-serif;
font-size: 13px;
font-weight: normal;
letter-spacing: 0px;
color: #000000;
background-color: #ffffff;
}


h1, h2, h3, h4, h5, h6, a
{
font-family: arial,helvetica,sans-serif;
font-weight: bold;
}

h1   { font-size: 32px; }
h2   { font-size: 26px; }
h3   { font-size: 24px; }
h4   { font-size: 22px; }
h5   { font-size: 19px; }
h6   { font-size: 16px; }

a:link    { text-decoration: underline; color: #0000ff; }
a:visited { text-decoration: underline; color: #2222ff; }
a:active  { text-decoration: underline; color: #ffffff; background-color: #0000ff;    }

.tablecolumnheading { text-align: center; font-family: arial,helvetica,sans-serif; font-size: 13px; font-weight: normal; letter-spacing: 0px; color: #000000; margin: 0px; background-color: #C0C0C0; }
.tablecellcenter    { text-align: center; font-family: arial,helvetica,sans-serif; font-size: 13px; font-weight: normal; letter-spacing: 0px; color: #000000; margin: 0px; background-color: #ffffff; }
.tablecellplain     { font-family: verdana,arial,helvetica,sans-serif; font-size: 13px; font-weight: normal; letter-spacing: 0px; color: #000000; margin: 0px; background-color: #ffffff; }
.tablecellright     { font-family: verdana,arial,helvetica,sans-serif; font-size: 13px; font-weight: normal; letter-spacing: 0px; color: #000000; text-align: right; margin: 0px; background-color: #ffffff; }
.tableprestyle      { font-family: courier,arial,helvetica,sans-serif; font-weight: normal; letter-spacing: 0px; color: #000000; margin: 0px; background-color: #ffffff; }

.vpad8  { height:8px;  }
.vpad16 { height:16px; }
.vpad24 { height:24px; }
.vpad32 { height:32px; }
.vpad48 { height:48px; }
.vpad56 { height:56px; }
.vpad64 { height:64px; }
.vpad72 { height:72px; }
.vpad80 { height:80px; }
.vpad88 { height:88px; }
.vpad96 { height:96px; }

-->
</style>


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->


</head>


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->


<body style="width:800px; margin-left:auto; margin-right:auto;">


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->




<div class="vpad96"></div>




<div style="display: inline; background-color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 75px; color: #000000; ">
<b>Tetris</b></div>




<div class="vpad16"></div>




<div style="display: inline; background-color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 24px; color: #000000; ">
<b>Colin Fahey</b></div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">1. Software</h1>




<div style="display: inline; background-color: #ffffff; ">
<div style="background-color: #ffffff; border-width: 1px; border-color: #000000; border-style: solid; ">
<div style="background-color: #ffffff; padding-left: 64px; padding-right: 64px; padding-top: 24px; padding-bottom: 24px; border-color: #000000; ">
<div style="display: inline; background-color: #ffffff; border-color: #000000; ">


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.colinfahey.com/tetris/StandardTetris_2007June4.zip">StandardTetris_2007June4.zip</a><br>
Tetris source code (C# and C++ versions) and program ("exe");<br>
4068277 bytes<br>
MD5: 4e957e0ead66064183e9f7e04e618ec0<br>
</div>


</div>
</div>
</div>
</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">2. Introduction</h1>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This article describes how a computer can play the classic video game 
Tetris by getting information about the board, determining good actions,
 and performing those actions.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This article includes software capable of playing Tetris in real time.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The software includes the best real-time Tetris-playing algorithm in the public domain.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This article defines rules for "Standard Tetris", a specification based 
on the original 1986 pre-commercial version of Tetris for the Personal 
Computer (PC).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In 2003, the software included in this article was used to enable a computer to play Tetris running on a separate computer.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
An ordinary USB video camera was used to enable the computer to "see" the screen of the other computer.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
A relay board was controlled via an RS-232 interface to enable the 
computer to "press keys" on the keyboard of the other computer.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Thus, the first computer has a relationship to the second computer that 
is similar to a typical human player's relationship to a computer when 
playing Tetris; the game state is only known by looking at the screen, 
and player actions can only be initiated through a keyboard.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The configuration in this demonstration established that a computer can 
play Tetris better than a human, under normal real-time Tetris playing 
conditions.</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">3. History of Tetris</h1>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In 1985, Alexey Pajitnov and Dmitry Pavlovsky were computer engineers at
 the Computing Center of the Russian Academy of Sciences.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://www.ccas.ru/"><img src="Tetris_files/computer_center_russian_academy_of_sciences.jpg" id="ID_computer_center_russian_academy_of_sciences_jpg" alt="computer_center_russian_academy_of_sciences.jpg" height="288" width="640"></a><br><div style="display: inline; ">
<i>Dorodnicyn Computing Centre of the Russian Academy of Sciences</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.ccas.ru/">http://www.ccas.ru</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Alexey and Dmitry were interested in developing and selling addictive computer games.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
They tested out several different games.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Alexey was inspired by the ancient Greek puzzle game, Pentaminos, which involved arranging puzzle pieces made of five squares.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Alexey thought of the idea of arranging Pentamino pieces as they fell in
 to a rectangular cup, but realized that the twelve different 
five-square shapes were too complex for a video game.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Alexey switched to using seven "tetramino" pieces, each made of four squares.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In 1985.6, Alexey Pajitnov programmed the first version of Tetris on an Electronica 60.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/d_pavlovsky_and_a_pajitnov.jpg" id="ID_d_pavlovsky_and_a_pajitnov_jpg" alt="d_pavlovsky_and_a_pajitnov.jpg" style="border: 1px solid #d3d3d3;" height="200" width="640"><br><div style="display: inline; ">
<i>Dmitry Pavlovsky, Alexey Pajitnov, and Tetris.</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In 1985-1986, Vadim Gerasimov, a 16-year old high-school computer 
prodigy who worked at the academy, implemented Tetris for the IBM PC 
running the MS-DOS operating system.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
( Vadim Gerasimov later did research at the MIT Media Laboratory, from 
1994 through 2003, receiving a Ph.D. after completing many interesting 
projects: <a style="display: inline; color: #0000ff; " href="http://vadim.www.media.mit.edu/">http://vadim.www.media.mit.edu</a> )</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/original_tetris_splash_screen02.jpg" id="ID_original_tetris_splash_screen02_jpg" alt="original_tetris_splash_screen02.jpg" height="300" width="640"><br><div style="display: inline; ">
<i>The introduction screen of the 1987-1988 pre-commercial release of Tetris for the PC</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/original_tetris_start_game02.jpg" id="ID_original_tetris_start_game02_jpg" alt="original_tetris_start_game02.jpg" height="300" width="640"><br><div style="display: inline; ">
<i>The game play screen of the 1987-1988 pre-commercial release of Tetris for the PC</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
After 1987, Tetris spread around the globe.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The Tetris Company, LLC, owns the Tetris trademark.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://www.tetris.com/"><img src="Tetris_files/www_tetris_com_site.jpg" id="ID_www_tetris_com_site_jpg" alt="www_tetris_com_site.jpg" height="559" width="640"></a><br><div style="display: inline; ">
<i>The Tetris Company, LLC, Internet site (as it appeared in 2003). <a style="display: inline; color: #0000ff; " href="http://www.tetris.com/">http://www.tetris.com</a></i></div>
</div>
</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">4. Projects inspired by Tetris</h1>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">4.1 0-dimensional Tetris</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Not yet developed.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">4.2 1-dimensional Tetris</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Ziga Hajdukovic has developed 1-dimensional Tetris software that can be played in a Internet browser.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 512px; max-width: 800px; ">
<a href="http://www.tetris1d.org/"><img src="Tetris_files/tetris_1d_ziga_hajdukovic.jpg" id="ID_tetris_1d_ziga_hajdukovic_jpg" alt="tetris_1d_ziga_hajdukovic.jpg" height="320" width="512"></a><br><div style="display: inline; ">
<i>1-dimensional Tetris by Ziga Hajdukovic <a style="display: inline; color: #0000ff; " href="http://www.tetris1d.org/">http://www.tetris1d.org</a></i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Ziga Hajdukovic has also developed 1-dimensional Tetris software for mobile phones using the Java J2ME platform.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
( Instructions: <a style="display: inline; color: #0000ff; " href="http://www.tetris1d.org/mobile.php">http://www.tetris1d.org/mobile.php</a> ; WAP download: <a style="display: inline; color: #0000ff; " href="http://www.tetris1d.org/wap">http://www.tetris1d.org/wap</a> )</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">4.3 2-dimensional Tetris</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
All conventional Tetris variants are in this category.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This section includes interesting variants.</div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.1 Largest Tetris game ever : Delft University of Technology (1995)</h3>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 200px; max-width: 800px; ">
<img src="Tetris_files/delft_univ_1995_2000sqmeters_tetris1.gif" id="ID_delft_univ_1995_2000sqmeters_tetris1_gif" alt="delft_univ_1995_2000sqmeters_tetris1.gif" height="149" width="200"><br><div style="display: inline; ">
<i>Tetris played on a building; 2000 m^2 surface area; Delft University of Technology (1995)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 432px; max-width: 800px; ">
<img src="Tetris_files/delft_univ_1995_2000sqmeters_toveren.jpg" id="ID_delft_univ_1995_2000sqmeters_toveren_jpg" alt="delft_univ_1995_2000sqmeters_toveren.jpg" style="border: 1px solid #d3d3d3;" height="581" width="432"><br><div style="display: inline; ">
<i>Tetris played on a building; 2000 m^2 surface area; Delft University of Technology (1995)</i></div>
</div>
</div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.2 Another Tetris game played on a building : Brown University (2000)</h3>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 480px; max-width: 800px; ">
<img src="Tetris_files/brown_university_bastille_tetris_tetris_game_square.jpg" id="ID_brown_university_bastille_tetris_tetris_game_square_jpg" alt="brown_university_bastille_tetris_tetris_game_square.jpg" height="640" width="480"><br><div style="display: inline; ">
<i>Tetris game displayed using lights in the windows of a building at Brown University (2000.4-200.5) <url>http://bastilleweb.techhouse.org</url></i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 480px; max-width: 800px; ">
<a href="http://bastilleweb.techhouse.org/"><img src="Tetris_files/brown_university_bastille_tetris_woz_play.jpg" id="ID_brown_university_bastille_tetris_woz_play_jpg" alt="brown_university_bastille_tetris_woz_play.jpg" height="640" width="480"></a><br><div style="display: inline; ">
<i>Steve Wozniak, cofounder of Apple Computers, playing Tetris; Brown University (2000) <a style="display: inline; color: #0000ff; " href="http://bastilleweb.techhouse.org/">http://bastilleweb.techhouse.org</a></i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; ">
<div style="background-color: #ffffff; border-width: 1px; border-color: #000000; border-style: solid; ">
<div style="background-color: #ffffff; padding-left: 16px; padding-right: 16px; padding-top: 16px; padding-bottom: 16px; border-color: #000000; ">
<div style="display: inline; background-color: #ffffff; border-color: #000000; ">


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
<i>"I think it was just the most incredible one-day thing I could 
imagine in my life. Like Steve Jobs always said, the journey is the 
reward."</i></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
<i>"It made me think of projects we did back in college. Things that 
were almost undoable that other people wouldn't think of doing."</i></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
Steve Wozniak (2000)</div>


</div>
</div>
</div>
</div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.3 Internet browser game with MIT "Green Building" image</h3>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 128px; max-width: 800px; ">
<a href="http://vadim.www.media.mit.edu/games/gbt.html"><img src="Tetris_files/tetris_vadim_green_building3.jpg" id="ID_tetris_vadim_green_building3_jpg" alt="tetris_vadim_green_building3.jpg" height="150" width="128"></a><br><div style="display: inline; ">
<i>Vadim Gerisimov's Internet browser Tetris</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://vadim.www.media.mit.edu/games/gbt.html">http://vadim.www.media.mit.edu/games/gbt.html</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This Internet browser Tetris variant was created by Vadim Gerasimov.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This Internet browser Tetris features the "Green" building at the campus of MIT.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This Tetris variant only has nine columns instead of the standard ten columns.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This Tetris variant presents new pieces with random orientations.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Vadim Gerasimov is the person who wrote the computer code for the PC version of Tetris in 1986.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Vadim Gerasimov did Ph.D. research at the MIT Media Laboratory during 1994-2003, working on many interesting projects.</div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.4 PIC16F84 12 MHz microcontroller-based NTSC / PAL video Tetris game</h3>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 494px; max-width: 800px; ">
<a href="http://www.pablin.com.ar/electron/circuito/mc/tetris"><img src="Tetris_files/tetris_pic_television_screen.jpg" id="ID_tetris_pic_television_screen_jpg" alt="tetris_pic_television_screen.jpg" height="387" width="494"></a><br><div style="display: inline; ">
<i>PIC16F84 12 MHz microcontroller-based NTSC / PAL video Tetris game</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.pablin.com.ar/electron/circuito/mc/tetris">http://www.pablin.com.ar/electron/circuito/mc/tetris</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The image above shows the NTSC / PAL video output produced by a PIC16F84
 12 MHz microcontroller running software written by Rickard Gunee in 
1998.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The video signal is generated by software control of digital outputs.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Other PIC projects: <a style="display: inline; color: #0000ff; " href="http://etronics.free.fr/liens5.htm">http://etronics.free.fr/liens5.htm</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.5 "Scopetris" Oscilloscope Tetris by Lars Pontoppidan (2007.8)</h3>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://pontoppidan.info/lars/index.php?proj=scopetris"><img src="Tetris_files/scopetris_lars_pontoppidan_2007_aug.jpg" id="ID_scopetris_lars_pontoppidan_2007_aug_jpg" alt="scopetris_lars_pontoppidan_2007_aug.jpg" height="480" width="640"></a><br><div style="display: inline; ">
<i>"Scopetris" Oscilloscope Tetris by Lars Pontoppidan (2007.8)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://pontoppidan.info/lars/index.php?proj=scopetris">http://pontoppidan.info/lars/index.php?proj=scopetris</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Lars Pontoppidan wrote code for the AtMega32 microcontroller, and added 
simple analog circuitry, to create a Tetris version that could be played
 on an oscilloscope.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Certain registers of the AtMega32 microcontroller control 8-bit output 
signals, and, when passed through an "R-2R" electrical resistor circuit 
for digital-to-analog (D/A) conversion, the resulting analog signals can
 control the (x,y) coordinates of an oscilloscope beam (when the 
oscilloscope is set to "X-Y mode").</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
YouTube video:</div>




<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.youtube.com/watch?v=Hui5Azx5jQo">http://www.youtube.com/watch?v=Hui5Azx5jQo</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
FLV video:</div>




<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.colinfahey.com/tetris/scopetris_lars_pontoppidan_2007_aug.flv">scopetris_lars_pontoppidan_2007_aug.flv</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.6 Obfuscated code Tetris : C / Unix</h3>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following was awarded "1989 IOCCC Best Game".</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 32px; padding-bottom: 32px; border-width: 1px; border-color: #000000; border-style: solid; ">
<span style="color: #0000ff;">long</span>&nbsp;h[<span style="color: #801000;">4</span>];t(){h[<span style="color: #801000;">3</span>]-=h[<span style="color: #801000;">3</span>]/<span style="color: #801000;">3000</span>;setitimer(<span style="color: #801000;">0</span>,h,<span style="color: #801000;">0</span>);}c,d,l,v[]={(<span style="color: #0000ff;">int</span>)t,<span style="color: #801000;">0</span>,<span style="color: #801000;">2</span>},w,s,I,K<br>
=<span style="color: #801000;">0</span>,i=<span style="color: #801000;">276</span>,j,k,q[<span style="color: #801000;">276</span>],Q[<span style="color: #801000;">276</span>],*n=q,*m,x=<span style="color: #801000;">17</span>,f[]={<span style="color: #801000;">7</span>,<span style="color: #801000;">-13</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">1</span>,<span style="color: #801000;">8</span>,<span style="color: #801000;">-11</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">9</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">1</span>,<br>
<span style="color: #801000;">12</span>,<span style="color: #801000;">3</span>,<span style="color: #801000;">-13</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">12</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">11</span>,<span style="color: #801000;">1</span>,<span style="color: #801000;">15</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">13</span>,<span style="color: #801000;">1</span>,<span style="color: #801000;">18</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">1</span>,<span style="color: #801000;">2</span>,<span style="color: #801000;">0</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">11</span>,<span style="color: #801000;">1</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">1</span>,<span style="color: #801000;">13</span>,<span style="color: #801000;">10</span>,<span style="color: #801000;">-12</span>,<br>
<span style="color: #801000;">1</span>,<span style="color: #801000;">12</span>,<span style="color: #801000;">11</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">1</span>,<span style="color: #801000;">2</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">12</span>,<span style="color: #801000;">13</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">12</span>,<span style="color: #801000;">13</span>,<span style="color: #801000;">14</span>,<span style="color: #801000;">-11</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">1</span>,<span style="color: #801000;">4</span>,<span style="color: #801000;">-13</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">12</span>,<span style="color: #801000;">16</span>,<span style="color: #801000;">-11</span>,<span style="color: #801000;">-12</span>,<br>
<span style="color: #801000;">12</span>,<span style="color: #801000;">17</span>,<span style="color: #801000;">-13</span>,<span style="color: #801000;">1</span>,<span style="color: #801000;">-1</span>,<span style="color: #801000;">5</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">12</span>,<span style="color: #801000;">11</span>,<span style="color: #801000;">6</span>,<span style="color: #801000;">-12</span>,<span style="color: #801000;">12</span>,<span style="color: #801000;">24</span>};u(){<span style="color: #0000ff;">for</span>(i=<span style="color: #801000;">11</span>;++i&lt;<span style="color: #801000;">264</span>;)<span style="color: #0000ff;">if</span>((k=q[i])-Q[i]<br>
){Q[i]=k;<span style="color: #0000ff;">if</span>(i-++I||i%<span style="color: #801000;">12</span>&lt;<span style="color: #801000;">1</span>)printf("\<span style="color: #801000;">033</span>[%d;%dH",(I=i)/<span style="color: #801000;">12</span>,i%<span style="color: #801000;">12</span>*<span style="color: #801000;">2</span>+<span style="color: #801000;">28</span>);printf(<br>
"\<span style="color: #801000;">033</span>[%dm&nbsp;&nbsp;"+(K-k?<span style="color: #801000;">0</span>:<span style="color: #801000;">5</span>),k);K=k;}Q[<span style="color: #801000;">263</span>]=c=getchar();}G(b){<span style="color: #0000ff;">for</span>(i=<span style="color: #801000;">4</span>;i--;)<span style="color: #0000ff;">if</span>(q[i?b+<br>
n[i]:b])<span style="color: #0000ff;">return</span>&nbsp;<span style="color: #801000;">0</span>;<span style="color: #0000ff;">return</span>&nbsp;<span style="color: #801000;">1</span>;}g(b){<span style="color: #0000ff;">for</span>(i=<span style="color: #801000;">4</span>;i--;q[i?x+n[i]:x]=b);}main(C,V,a)<span style="color: #0000ff;">char</span>*<br>
*V,*a;{h[<span style="color: #801000;">3</span>]=<span style="color: #801000;">1000000</span>/(l=C&gt;<span style="color: #801000;">1</span>?atoi(V[<span style="color: #801000;">1</span>]):<span style="color: #801000;">2</span>);<span style="color: #0000ff;">for</span>(a=C&gt;<span style="color: #801000;">2</span>?V[<span style="color: #801000;">2</span>]:"jkl&nbsp;pq";i;i--)*n++=i&lt;<br>
<span style="color: #801000;">25</span>||i%<span style="color: #801000;">12</span>&lt;<span style="color: #801000;">2</span>?<span style="color: #801000;">7</span>:<span style="color: #801000;">0</span>;srand(getpid());system("stty&nbsp;cbreak&nbsp;-echo&nbsp;stop&nbsp;u");sigvec(<span style="color: #801000;">14</span>,v,<br>
<span style="color: #801000;">0</span>);t();puts("\<span style="color: #801000;">033</span>[H\<span style="color: #801000;">033</span>[J");<span style="color: #0000ff;">for</span>(n=f+rand()%<span style="color: #801000;">7</span>*<span style="color: #801000;">4</span>;;g(<span style="color: #801000;">7</span>),u(),g(<span style="color: #801000;">0</span>)){<span style="color: #0000ff;">if</span>(c&lt;<span style="color: #801000;">0</span>){<span style="color: #0000ff;">if</span>(G(x+<br>
<span style="color: #801000;">12</span>))x+=<span style="color: #801000;">12</span>;<span style="color: #0000ff;">else</span>{g(<span style="color: #801000;">7</span>);++w;<span style="color: #0000ff;">for</span>(j=<span style="color: #801000;">0</span>;j&lt;<span style="color: #801000;">252</span>;j=<span style="color: #801000;">12</span>*(j/<span style="color: #801000;">12</span>+<span style="color: #801000;">1</span>))<span style="color: #0000ff;">for</span>(;q[++j];)<span style="color: #0000ff;">if</span>(j%<span style="color: #801000;">12</span>==<span style="color: #801000;">10</span>){<br>
<span style="color: #0000ff;">for</span>(;j%<span style="color: #801000;">12</span>;q[j--]=<span style="color: #801000;">0</span>);u();<span style="color: #0000ff;">for</span>(;--j;q[j+<span style="color: #801000;">12</span>]=q[j]);u();}n=f+rand()%<span style="color: #801000;">7</span>*<span style="color: #801000;">4</span>;G(x=<span style="color: #801000;">17</span>)||(c<br>
=a[<span style="color: #801000;">5</span>]);}}<span style="color: #0000ff;">if</span>(c==*a)G(--x)||++x;<span style="color: #0000ff;">if</span>(c==a[<span style="color: #801000;">1</span>])n=f+<span style="color: #801000;">4</span>**(m=n),G(x)||(n=m);<span style="color: #0000ff;">if</span>(c==a[<span style="color: #801000;">2</span>])G<br>
(++x)||--x;<span style="color: #0000ff;">if</span>(c==a[<span style="color: #801000;">3</span>])<span style="color: #0000ff;">for</span>(;G(x+<span style="color: #801000;">12</span>);++w)x+=<span style="color: #801000;">12</span>;<span style="color: #0000ff;">if</span>(c==a[<span style="color: #801000;">4</span>]||c==a[<span style="color: #801000;">5</span>]){s=sigblock(<br>
<span style="color: #801000;">8192</span>);printf("\<span style="color: #801000;">033</span>[H\<span style="color: #801000;">033</span>[J\<span style="color: #801000;">033</span>[<span style="color: #801000;">0</span>m%d\n",w);<span style="color: #0000ff;">if</span>(c==a[<span style="color: #801000;">5</span>])<span style="color: #0000ff;">break</span>;<span style="color: #0000ff;">for</span>(j=<span style="color: #801000;">264</span>;j--;Q[j]=<br>
<span style="color: #801000;">0</span>);<span style="color: #0000ff;">while</span>(getchar()-a[<span style="color: #801000;">4</span>]);puts("\<span style="color: #801000;">033</span>[H\<span style="color: #801000;">033</span>[J\<span style="color: #801000;">033</span>[<span style="color: #801000;">7</span>m");sigsetmask(s);}}d=popen(<br>
"stty&nbsp;-cbreak&nbsp;echo&nbsp;stop&nbsp;\<span style="color: #801000;">023</span>;sort&nbsp;-mnr&nbsp;-o&nbsp;HI&nbsp;-&nbsp;HI;cat&nbsp;HI","w");fprintf(d,<br>
"%<span style="color: #801000;">4</span>d&nbsp;from&nbsp;level&nbsp;%<span style="color: #801000;">1</span>d&nbsp;by&nbsp;%s\n",w,l,getlogin());pclose(d);}</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Reference: <a style="display: inline; color: #0000ff; " href="http://homepages.cwi.nl/%7Etromp/tetris.html">http://homepages.cwi.nl/~tromp/tetris.html</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.7 Obfuscated code Tetris : Perl code</h3>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following is Tetris for the Perl interpreter: Perltris (version 20050717) by Sean Adams.</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 32px; padding-bottom: 32px; border-width: 1px; border-color: #000000; border-style: solid; ">
#!/usr/bin/perl<br>
<br>
$_='A=<span style="color: #801000;">15</span>;&nbsp;B=<span style="color: #801000;">30</span>;&nbsp;select(stdin);&nbsp;$|=<span style="color: #801000;">1</span>;&nbsp;select(stdout);$|=<span style="color: #801000;">1</span>;&nbsp;system<br>
"stty&nbsp;-echo&nbsp;-icanon&nbsp;eol&nbsp;\<span style="color: #801000;">001</span>";&nbsp;<span style="color: #0000ff;">for</span>&nbsp;C(split(/\s/,"<span style="color: #801000;">010.010</span>.<span style="color: #801000;">010.010</span><br>
<span style="color: #801000;">77.77</span>&nbsp;<span style="color: #801000;">022.020</span>.<span style="color: #801000;">020</span>&nbsp;<span style="color: #801000;">330.030</span>.<span style="color: #801000;">030</span>&nbsp;<span style="color: #801000;">440.044</span>.<span style="color: #801000;">000</span>&nbsp;<span style="color: #801000;">055.550</span>.<span style="color: #801000;">000</span>&nbsp;<span style="color: #801000;">666.060</span>.".<br>
"<span style="color: #801000;">000</span>")){D=<span style="color: #801000;">0</span>;<span style="color: #0000ff;">for</span>&nbsp;E(split(/\./,C)){F=<span style="color: #801000;">0</span>;<span style="color: #0000ff;">for</span>&nbsp;G(split("",E)){C[P][F++<br>
][D]=G}&nbsp;D++}J[P]=F;&nbsp;I[P++]&nbsp;=D}%L=split(/&nbsp;/,"m&nbsp;_".chr(<span style="color: #801000;">72</span>)."&nbsp;c&nbsp;<span style="color: #801000;">2</span>".<br>
chr(<span style="color: #801000;">74</span>)."&nbsp;a&nbsp;_m");sub&nbsp;a{<span style="color: #0000ff;">for</span>&nbsp;K(split(/&nbsp;/,shift)){(K,L)=split(/=/,K<br>
);K=L{K};K=~s/_/L/;&nbsp;printf&nbsp;"%c[K",<span style="color: #801000;">27</span>}}sub&nbsp;u{a("a=<span style="color: #801000;">40</span>");<span style="color: #0000ff;">for</span>&nbsp;D(<span style="color: #801000;">0.</span>.B<br>
<span style="color: #801000;">-1</span>){<span style="color: #0000ff;">for</span>&nbsp;F(<span style="color: #801000;">0.</span>.A-<span style="color: #801000;">1</span>){M=G[F][D];<span style="color: #0000ff;">if</span>(R[F][D]!=M)&nbsp;{R[F][D]=M;a("m"."=".<br>
(<span style="color: #801000;">5</span>+D).";".(F*<span style="color: #801000;">2</span>+<span style="color: #801000;">5</span>));&nbsp;a("a=".(<span style="color: #801000;">40</span>+M).";"&nbsp;.(<span style="color: #801000;">30</span>+M));print&nbsp;"&nbsp;"x2}}}a(<br>
"m=<span style="color: #801000;">0</span>;<span style="color: #801000;">0</span>&nbsp;a=<span style="color: #801000;">37</span>;<span style="color: #801000;">40</span>")}sub&nbsp;r{(N)=@_;<span style="color: #0000ff;">while</span>(N--)&nbsp;{Q=W;W=O=H;H=Q;<span style="color: #0000ff;">for</span>&nbsp;F(&nbsp;<span style="color: #801000;">0</span><br>
..Q-<span style="color: #801000;">1</span>){<span style="color: #0000ff;">for</span>&nbsp;D(<span style="color: #801000;">0.</span>.O-<span style="color: #801000;">1</span>)&nbsp;{Q[F][D]=K[F][D]}}<span style="color: #0000ff;">for</span>&nbsp;F(<span style="color: #801000;">0.</span>.O-<span style="color: #801000;">1</span>){<span style="color: #0000ff;">for</span>&nbsp;D(<span style="color: #801000;">0.</span>.Q-<br>
<span style="color: #801000;">1</span>){K[F][D]=&nbsp;Q[Q-D-<span style="color: #801000;">1</span>][F]}}}}sub&nbsp;l{<span style="color: #0000ff;">for</span>&nbsp;F(<span style="color: #801000;">0.</span>.W-<span style="color: #801000;">1</span>){<span style="color: #0000ff;">for</span>&nbsp;D(<span style="color: #801000;">0.</span>.H-<span style="color: #801000;">1</span>){(K[<br>
F][D]&amp;&amp;&nbsp;((G[X+F][Y+D])||&nbsp;(X+F&lt;<span style="color: #801000;">0</span>)||(X+F&gt;=A)||&nbsp;(Y+D&gt;=B)))&amp;&amp;&nbsp;<span style="color: #0000ff;">return</span><br>
<span style="color: #801000;">0</span>}}<span style="color: #801000;">1</span>}sub&nbsp;p{<span style="color: #0000ff;">for</span>&nbsp;F(<span style="color: #801000;">0.</span>.W-<span style="color: #801000;">1</span>){<span style="color: #0000ff;">for</span>&nbsp;D(<span style="color: #801000;">0.</span>.H-<span style="color: #801000;">1</span>){(K[F][D]&gt;<span style="color: #801000;">0</span>)&amp;&amp;(G[X+F][Y+D]<br>
=K[F][D])&nbsp;}}<span style="color: #801000;">1</span>}sub&nbsp;o{<span style="color: #0000ff;">for</span>&nbsp;F(<span style="color: #801000;">0.</span>.W-<span style="color: #801000;">1</span>){<span style="color: #0000ff;">for</span>&nbsp;D(<span style="color: #801000;">0.</span>.H-<span style="color: #801000;">1</span>){(K[F][D]&gt;<span style="color: #801000;">0</span>)&amp;&amp;(G[<br>
X+F][&nbsp;Y+D]=<span style="color: #801000;">0</span>)}}}sub&nbsp;n{C=<span style="color: #0000ff;">int</span>(rand(P))&nbsp;;W=J[C];H=I[C];X=<span style="color: #0000ff;">int</span>(A/<span style="color: #801000;">2</span>)<span style="color: #801000;">-1</span><br>
;Y=<span style="color: #801000;">0</span>;<span style="color: #0000ff;">for</span>&nbsp;F(<span style="color: #801000;">0.</span>.W-<span style="color: #801000;">1</span>){<span style="color: #0000ff;">for</span>&nbsp;D(<span style="color: #801000;">0.</span>.H-<span style="color: #801000;">1</span>){K[F][D]=&nbsp;C[C][F][D]}}r(<span style="color: #0000ff;">int</span>(rand<br>
(<span style="color: #801000;">4</span>)));l&amp;&amp;p}sub&nbsp;c{d:<span style="color: #0000ff;">for</span>(D=B;D&gt;=<span style="color: #801000;">0</span>;D--){<span style="color: #0000ff;">for</span>&nbsp;F(<span style="color: #801000;">0.</span>.A-<span style="color: #801000;">1</span>){G[F][D]||next<br>
d}<span style="color: #0000ff;">for</span>(D2=D;D2&gt;=<span style="color: #801000;">0</span>;&nbsp;D2--){<span style="color: #0000ff;">for</span>&nbsp;F(<span style="color: #801000;">0.</span>.A-<span style="color: #801000;">1</span>){G[F][D2]=&nbsp;(D2&gt;<span style="color: #801000;">1</span>)?G[F][D2-<span style="color: #801000;">1</span><br>
]:<span style="color: #801000;">0</span>;&nbsp;}}u;}}a&nbsp;("m=<span style="color: #801000;">0</span>;<span style="color: #801000;">0</span>&nbsp;a=<span style="color: #801000;">0</span>;<span style="color: #801000;">37</span>;<span style="color: #801000;">40</span>&nbsp;c");print&nbsp;"\n\n"<span style="color: #801000;">.4</span>x"&nbsp;"."&nbsp;"x(A-<span style="color: #801000;">4</span>).<br>
"perltris\n".("&nbsp;"x4)."--"xA."\n".(("&nbsp;"x3)."|"."&nbsp;"x(A*<span style="color: #801000;">2</span>)."|\n")xB<br>
.("&nbsp;"x4).&nbsp;"--"xA."\n";n;<span style="color: #0000ff;">for</span>(;;)&nbsp;{u;R=chr(<span style="color: #801000;">1</span>);&nbsp;(S,T)=select(R,U,V,<br>
<span style="color: #801000;">0.01</span>);<span style="color: #0000ff;">if</span>(S)&nbsp;{Z=getc;}<span style="color: #0000ff;">else</span>&nbsp;{<span style="color: #0000ff;">if</span>($e++&gt;<span style="color: #801000;">20</span>){Z="&nbsp;";$e=<span style="color: #801000;">0</span>;}<span style="color: #0000ff;">else</span>{next;}&nbsp;}<br>
<span style="color: #0000ff;">if</span>(Z&nbsp;eq&nbsp;"k"){o;r(<span style="color: #801000;">1</span>);l||r(<span style="color: #801000;">3</span>);p};&nbsp;<span style="color: #0000ff;">if</span>(Z&nbsp;eq&nbsp;"j"){o;X--;l||X++;p};&nbsp;<span style="color: #0000ff;">if</span><br>
(Z&nbsp;eq&nbsp;"l"){o;X++;l||X--;p};<span style="color: #0000ff;">if</span>(Z&nbsp;eq&nbsp;"&nbsp;"){o;Y++;(E=l)||Y--;p;E||&nbsp;c<br>
|c|c|c|c|n||<span style="color: #0000ff;">goto</span>&nbsp;g;};<span style="color: #0000ff;">if</span>(Z&nbsp;eq&nbsp;"q"){last;}}g:&nbsp;a("a=<span style="color: #801000;">0</span>&nbsp;m=".(B+<span style="color: #801000;">8</span>).";<span style="color: #801000;">0</span><br>
"&nbsp;);&nbsp;system&nbsp;"stty&nbsp;sane";&nbsp;';&nbsp;s/([A-Z])/\$$<span style="color: #801000;">1</span>/g;&nbsp;s/\%\$/\%/g;&nbsp;eval;</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Reference: <a style="display: inline; color: #0000ff; " href="http://www.seanadams.com/perltris">http://www.seanadams.com/perltris</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.8 Mozilla SVG Tetris</h3>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Scalable Vector Graphics (SVG) is a standard for describing graphical objects using XML.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://www.croczilla.com/svg/samples/svgtetris/svgtetris.svg"><img src="Tetris_files/tetris_svg_640x480.gif" id="ID_tetris_svg_640x480_gif" alt="tetris_svg_640x480.gif" height="480" width="640"></a><br><div style="display: inline; ">
<i>Mozilla SVG Tetris : Tetris implemented using a Scalable Vector Graphics (SVG) description</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.croczilla.com/svg/samples/svgtetris/svgtetris.svg">http://www.croczilla.com/svg/samples/svgtetris/svgtetris.svg</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Other examples of SVG: <a style="display: inline; color: #0000ff; " href="http://www.croczilla.com/svg/samples">http://www.croczilla.com/svg/samples</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.9 Google "widget" Tetris</h3>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Google, Yahoo!, and Microsoft, and other companies, have promoted 
miniature Internet-based software named "widgets" that are usually 
characterized by some use of dynamic data available on the Internet.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
One such widget available through Google is a Tetris game.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following example is cute, but the shapes rotate in annoying ways:</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://www.playbie.com/Game.aspx?gm=1&amp;wt=2&amp;su=live.com&amp;sn=Google&amp;gn=Google"><img src="Tetris_files/tetris_google_widget.gif" id="ID_tetris_google_widget_gif" alt="tetris_google_widget.gif" height="399" width="640"></a><br><div style="display: inline; ">
<i>Google "widget" Tetris</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.playbie.com/Game.aspx?gm=1&amp;wt=2&amp;su=live.com&amp;sn=Google&amp;gn=Google">http://www.playbie.com/Game.aspx?gm=1&amp;wt=2&amp;su=live.com&amp;sn=Google&amp;gn=Google</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Other Google widgets:</div>




<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.google.com/ig/directory?synd=open">http://www.google.com/ig/directory?synd=open</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.10 MIT research paper: "Tetris is Hard, Even to Approximate" (2002)</h3>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following research document contains a proof that a certain kind of Tetris variant is "NP-complete".</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://theory.csail.mit.edu/%7Eedemaine/papers/Tetris_TR2002">http://theory.csail.mit.edu/~edemaine/papers/Tetris_TR2002</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Erik D. Demaine, Susan Hohenberger, and David Liben-Nowell, <i>"Tetris is Hard, Even to Approximate"</i>, Technical Report MIT-LCS-TR-865, Massachusetts Institute of Technology, 2002.10.21.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Locally-cached copy (PDF): <a style="display: inline; color: #0000ff; " href="http://www.colinfahey.com/tetris/tetris_theory_mit_lcs_tr_865_0210020.pdf">tetris_theory_mit_lcs_tr_865_0210020.pdf</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
"NP-complete" is a classification of the time cost and space cost of an algorithm.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Other classifications include "P" and "NP".</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
A classification of "NP-complete" implies that, for problems larger than
 some small size, the algorithm is unlikely to find a desired solution 
in a practical amount of time or space.</div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.11 Research document: "Applying reinforcement learning to Tetris"</h3>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following paper, published 2005.5.30, by Donald Carr at the Computer
 Science department at Rhodes University, South Africa, presents the 
application of "reinforcement learning" to Tetris.</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.colinfahey.com/tetris/ApplyingReinforcementLearningToTetris_DonaldCarr_RU_AC_ZA.pdf">ApplyingReinforcementLearningToTetris_DonaldCarr_RU_AC_ZA.pdf</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.12 Tetris Skirt (2007.11)</h3>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 463px; max-width: 800px; ">
<img src="Tetris_files/tetris_skirt.jpg" id="ID_tetris_skirt_jpg" alt="tetris_skirt.jpg" height="514" width="463"><br><div style="display: inline; ">
<i>Tetris Skirt (2007.11)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The Tetris skirt was created by "Lucy" ("hissyfitoly" on etsy.com) before 2007.11.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
From the creator's description of the skirt (offered for sale on etsy.com):</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; padding-left: 16px; padding-right: 16px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
<i>"Okay, so I was a secret, closet Tetris fanatic from about, oh, 1993 
to 1996. It was a bitter-sweet obsession. My life wasn't so great, but I
 could control the stacking of a few measly blocks, [damn it]! Or could 
I? Video games have been coming back to haunt my dreams as of late, and I
 find myself stacking blocks, jumping away from a frighteningly-large 
Q*Bert, and slipping off of logs next to a pixellated frog. This skirt 
is the result of those nightmares."</i></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Forum comments regarding this skirt:</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; ">
<div style="background-color: #ffffff; border-width: 1px; border-color: #000000; border-style: solid; ">
<div style="background-color: #ffffff; padding-left: 16px; padding-right: 16px; padding-top: 16px; padding-bottom: 16px; border-color: #000000; ">
<div style="display: inline; background-color: #ffffff; border-color: #000000; ">


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
"Man that skirt sucks at Tetris"</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
"Ahahahaha, I thought the same thing."</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
"There's a complete line down at the bottom...completed lines disappear. DO OVER."</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
"There should be a spot in the back or front where "long" piece would fit perfectly..."</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
"That's a really ugly skirt though. My boyfriend couldn't buy me enough 
chocolate and flowers to convince me to wear that thing."</div>


</div>
</div>
</div>
</div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.13 Tetris stage act (2007.4)</h3>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://www.youtube.com/watch?v=sZrs8ZCO8xM"><img src="Tetris_files/tetris_stage_act.jpg" id="ID_tetris_stage_act_jpg" alt="tetris_stage_act.jpg" height="480" width="640"></a><br><div style="display: inline; ">
<i>Tetris stage act (2007.4)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.youtube.com/watch?v=sZrs8ZCO8xM">http://www.youtube.com/watch?v=sZrs8ZCO8xM</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
"From those that brought you the Triforce in 2006... Comes the next generation of inanimate object skit... Tetris."</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Locally-cached video in Flash video (FLV) format (use VLC to play):</div>




<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.colinfahey.com/tetris/tetris_stage_act.flv">tetris_stage_act.flv</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.14 Hilarious Tetris variations on a Japanese television show</h3>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://www.youtube.com/watch?v=SYRLTF71Sow"><img src="Tetris_files/tetris_funny_variations_japanese_tv.jpg" id="ID_tetris_funny_variations_japanese_tv_jpg" alt="tetris_funny_variations_japanese_tv.jpg" height="480" width="640"></a><br><div style="display: inline; ">
<i>Tetris variations on Japanese television show</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.youtube.com/watch?v=SYRLTF71Sow">http://www.youtube.com/watch?v=SYRLTF71Sow</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This video segment from a Japanese television show includes hilarious variations of Tetris, including:</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
pieces that vanish upon landing, a piece that fills an entire row (thus 
completing a row upon landing), multiple pieces falling simultaneously, 
irregularly shaped pieces, a long piece that is slightly too wide to fit
 in a gap (preventing a 4-row completion!), Mario hitting a mushroom and
 becoming enormous and dying!, small piece debris remaining after rows 
are destroyed, upward gravity making pieces float to the top, etc.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Locally-cached video in Flash video (FLV) format (use VLC to play):</div>




<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.colinfahey.com/tetris/tetris_funny_variations_japanese_tv.flv">tetris_funny_variations_japanese_tv.flv</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.15 "The Original Human TETRIS Performance by Guillaume Reymond" (2007.11)</h3>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://www.youtube.com/watch?v=G0LtUX_6IXY"><img src="Tetris_files/tetris_with_human_blocks_guillaume_reymond_2007nov.jpg" id="ID_tetris_with_human_blocks_guillaume_reymond_2007nov_jpg" alt="tetris_with_human_blocks_guillaume_reymond_2007nov.jpg" height="480" width="640"></a><br><div style="display: inline; ">
<i>"The Original Human TETRIS Performance by Guillaume Reymond" (2007.11)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.youtube.com/watch?v=G0LtUX_6IXY">http://www.youtube.com/watch?v=G0LtUX_6IXY</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
From the description on YouTube:</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
"<caps>Tetris</caps> played by real human-beings sitting in an auditorium:</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<caps>Tetris</caps> is the 4th video performance of the GAME OVER 
Project, directed by the Swiss artist Guillaume REYMOND (NOTsoNOISY 
creative agency).</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This stop-motion video was shot and played for "LES URBAINES" festival <a style="display: inline; color: #0000ff; " href="http://www.urbaines.ch/">http://www.urbaines.ch</a> at the Palais de Rumine (Lausanne, Switzerland) on November 24th 2007.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
You can find more information and also SPACE INVADERS, PONG and POLE POSITION on our website <a style="display: inline; color: #0000ff; " href="http://www.notsonoisy.com/gameover">http://www.notsonoisy.com/gameover</a>"</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Locally-cached video in Flash video (FLV) format (use VLC to play):</div>




<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.colinfahey.com/tetris/tetris_with_human_blocks_guillaume_reymond_2007nov.flv">tetris_with_human_blocks_guillaume_reymond_2007nov.flv</a></div>


<div class="vpad48"></div>
<h3 style="display: block; background-color: #ffffff; ">4.3.16 2.5-dimensional Tetris</h3>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The term "2.5-dimensional" is used here to mean a non-orthogonal view of
 a two-dimensional version of Tetris, with some thickness in the third 
dimension.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 496px; max-width: 800px; ">
<a href="http://lab.andre-michelle.com/"><img src="Tetris_files/tetris_2andhalfd_andre_michelle.jpg" id="ID_tetris_2andhalfd_andre_michelle_jpg" alt="tetris_2andhalfd_andre_michelle.jpg" height="396" width="496"></a><br><div style="display: inline; ">
<i>Andre Michelle's Tetris game for a Flash player <a style="display: inline; color: #0000ff; " href="http://lab.andre-michelle.com/">http://lab.andre-michelle.com</a></i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
(Find the link "tetris3d" in "F7: GAMES".)</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">4.4 3-dimensional Tetris</h2>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 429px; max-width: 800px; ">
<img src="Tetris_files/tetris_3d_gno3dtet_seb.jpg" id="ID_tetris_3d_gno3dtet_seb_jpg" alt="tetris_3d_gno3dtet_seb.jpg" height="509" width="429"><br><div style="display: inline; ">
<i>Linux / GTK version</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Three-dimensional Tetris in the form of a Java applet for Internet browsers:</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://paperstack.com/brokout">http://paperstack.com/brokout</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Three-dimensional Tetris for the Windows operating system:</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.sfu.ca/%7Evwchu/3dtetris.html">http://www.sfu.ca/~vwchu/3dtetris.html</a></div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">4.5 4-dimensional Tetris</h2>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/4d_tetris.jpg" id="ID_4d_tetris_jpg" alt="4d_tetris.jpg" height="640" width="640"><br><div style="display: inline; ">
<i>Greg Kaiser's "HyperTetris" (1996) : a 4-dimensional Tetris</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; ">
<div style="background-color: #ffffff; border-width: 1px; border-color: #000000; border-style: solid; ">
<div style="background-color: #ffffff; padding-left: 16px; padding-right: 16px; padding-top: 16px; padding-bottom: 16px; border-color: #000000; ">
<div style="display: inline; background-color: #ffffff; border-color: #000000; ">


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
In [1996], [...], Greg Kaiser put together a four-dimensional variant on the classic game.</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
Using IrisGL (a.k.a. igl) he created a working, if hard to play, game 
using four sub-screens to depict different three-dimensional aspects of 
the entire game-space.</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
[Because] there is not an easily [comprehensible] way to draw four-D 
objects on a two-D screen, the four sub-views are a practical method to 
manipulate and visualize the rotation and translation of the pieces 
through the four dimensions (in the game called x,y,z,w).</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
Rather than completing lines of blocks as in the original, the goal in 
this case is to fill a complete cube in the x,y,z subview (usually 4 by 4
 by 4).</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
The other subviews which contain the "w" dimension are arranged in a 
default 4 by 4 by 10 block arrangement with "w" being the long, 
"vertical" dimension in all three cases, with different bases of (x,y), 
(x,z), (y,z).</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
Gravity acts in the "-w" direction, so pieces fall "down" in the three 
long subviews that include "w", and do not move unless by player control
 in the last (x,y,z) subview.</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
It takes awhile to get used to, to say the least.</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
If by some miracle of patience or changing the parameters of the game, 
one does complete a cube, it will disappear as the completed lines do in
 the original Tetris, though no score is kept in HyperTetris.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
Benjamin Bernard (2000)</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://archive.ncsa.uiuc.edu/Classes/MATH198/bernard/oldIndex.html">http://archive.ncsa.uiuc.edu/Classes/MATH198/bernard/oldIndex.html</a></div>


</div>
</div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">4.6 N-dimensional Tetris</h2>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 608px; max-width: 800px; ">
<a href="http://polytopetetris.sourceforge.net/"><img src="Tetris_files/polytope_tetris_screenshot3.jpg" id="ID_polytope_tetris_screenshot3_jpg" alt="polytope_tetris_screenshot3.jpg" height="857" width="608"></a><br><div style="display: inline; ">
<i>Polytope Tetris (2003) : an N-dimensional Tetris game variant</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://polytopetetris.sourceforge.net/">http://polytopetetris.sourceforge.net</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; ">
<div style="background-color: #ffffff; border-width: 1px; border-color: #000000; border-style: solid; ">
<div style="background-color: #ffffff; padding-left: 16px; padding-right: 16px; padding-top: 16px; padding-bottom: 16px; border-color: #000000; ">
<div style="display: inline; background-color: #ffffff; border-color: #000000; ">


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
Polytope Tetris is n-dimensionally Tetris.</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
Inspired by the HyperTetris program, Polytope Tetris allows you tons play Tetris in any NUMBER OF dimension.</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
Play Tetris in 3D, 4D, 5D, or more.</div>




<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
HyperTetris is A much catchier name than Polytope (def) Tetris, but I can't steal the name.</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://polytopetetris.sourceforge.net/">http://polytopetetris.sourceforge.net</a></div>


</div>
</div>
</div>
</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">5. "Standard Tetris" specification</h1>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.1 Introduction</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The definition of "Standard Tetris" is an idealized model of the most 
important characteristics and behaviors of the first IBM-PC 
implementation of the Tetris game (circa 1986-1988).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The idealized model is based upon inferring the apparent intentions of 
the developers of the first IBM-PC implementation of the Tetris game.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
For example, it seems reasonable to infer that the developers of the 
first IBM-PC implementation of the Tetris game intended to select the 
shape of each new falling piece "randomly", and that the use of the 
Borland C implementation of the <b>rand()</b> function was merely a practical approximation of the intention.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The definition of "Standard Tetris" specifies that the shape of each new falling piece is to be selected "randomly".</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This ideal behavior cannot be achieved by any implementation, but implementations can approximate the ideal behavior.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Although no implementation can perfectly implement the definition of 
"Standard Tetris", the ideals of "Standard Tetris" involve objective 
characteristics, and implementations can be compared according to their 
relative closeness to the ideals of "Standard Tetris".</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This section describes a set of elements, behaviors, and rules, which, collectively, define "Standard Tetris".</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.2 Standard Tetris board</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The board is a grid of cells, having 10 columns, and 20 rows, for a total of <b>10 * 20 = 200</b> cells.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 400px; max-width: 800px; ">
<img src="Tetris_files/tetris_diagram_board_10x20_empty_new.jpg" id="ID_tetris_diagram_board_10x20_empty_new_jpg" alt="tetris_diagram_board_10x20_empty_new.jpg" height="600" width="400"><br><div style="display: inline; ">
<i>Standard Tetris board (10 columns, 20 rows)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Each cell can either be unoccupied (empty) or occupied (full).</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.3 Standard Tetris pieces</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
There are seven (7) standard Tetris pieces, with the following letter names:</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>{ O, I, S, Z, L, J, T }</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The letter names are inspired by the shapes of the pieces.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_diagram_pieces_orientations_new.jpg" id="ID_tetris_diagram_pieces_orientations_new_jpg" alt="tetris_diagram_pieces_orientations_new.jpg" height="853" width="640"><br><div style="display: inline; ">
<i>The seven Standard Tetris pieces and their "orientations"</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The dot at <b>(0,0)</b> coincides with board position <b>(6,20)</b> when the piece first appears.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The first column shows the initial "orientations".</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In the following, the word "orientation" is used to describe any state 
of a piece, within a set of allowed states, that can result from a 
counterclockwise rotation event.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Changing "orientation" from a specified "orientation" of an "<b>I</b>", "<b>S</b>", or "<b>Z</b>" piece, requires the combination of a rotation and a translation.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Therefore, the word "orientation" is used here to mean something more than rotation alone.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
However, "orientation" can change only in response to a counterclockwise
 rotation event, and the cycle of distinct "orientations" for each piece
 approximates, or matches, the cycle resulting from pure rotations.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The special use of the word "orientation" in this context is nearly 
equivalent to the meaning of the word "rotation" or "angle", but the 
word "orientation" is used instead of "rotation" to attempt to bring 
attention to the fact that some pieces require more than rotation to 
produce the set of allowed states resulting from counterclockwise 
"rotation" events.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Pieces can only switch orientations (or undergo a specific horizontal or
 vertical translation) if the resulting state of the piece would not 
have any occupied (full) cells beyond the area of the board and would 
not have any occupied cells which overlap any currently occupied cells 
of the board.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
(In this rule, the occupied (full) cells of the piece are not considered as part of the "currently occupied cells of the board"</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In the following comments, any reference to a result of a 
counterclockwise rotation event is made with the assumption that such a 
rotation can actually be performed, given the existing conditions of the
 piece and the board.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The "<b>O</b>" (box) piece only has a single orientation, and does not 
change the locations of any of its occupied (full) cells in response to 
any counterclockwise rotation event.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The "<b>I</b>" (line) piece has two possible orientations, initially appearing in a horizontal orientation.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The "<b>I</b>" piece alternates between the two orientations in response to successive counterclockwise rotation events.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The "<b>S</b>" and "<b>Z</b>" pieces each have two possible orientations.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
These pieces each alternate between two orientations in response to successive counterclockwise rotation events.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The "<b>L</b>", "<b>J</b>", and "<b>T</b>" pieces each have four 
possible orientations, and these orientations are the results of simple 
rotations about center points on the shapes.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When a piece first appears on the board, the piece has its "major axis" 
in a horizontal orientation, and the piece is at the top of the board.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Therefore, no pieces are initially capable of having their orientations 
changed. The piece must descend by one row to have the possibility of 
having its orientation changed.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Once a piece has fallen by one row on the board, all piece orientations 
can be attained (assuming the piece is not too close to the side walls 
or to the current pile of pieces).</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.4 Standard Tetris flowchart</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following is an approximate flowchart for a Standard Tetris game.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/standard_tetris_flowchart_for_timer_event_001.gif" id="ID_standard_tetris_flowchart_for_timer_event_001_gif" alt="standard_tetris_flowchart_for_timer_event_001.gif" height="1024" width="640"><br><div style="display: inline; ">
<i>Approximate flowchart for a Standard Tetris game</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/standard_tetris_flowchart_for_input_events_001.gif" id="ID_standard_tetris_flowchart_for_input_events_001_gif" alt="standard_tetris_flowchart_for_input_events_001.gif" height="700" width="640"><br><div style="display: inline; ">
<i>Approximate flowchart for a Standard Tetris game</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.5 Standard Tetris piece creation</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following diagram shows the (4 cell * 2 cell) region on the board where all pieces appear when created.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 400px; max-width: 800px; ">
<img src="Tetris_files/tetris_diagram_board_10x20_spawn_area.jpg" id="ID_tetris_diagram_board_10x20_spawn_area_jpg" alt="tetris_diagram_board_10x20_spawn_area.jpg" height="600" width="400"><br><div style="display: inline; ">
<i>Region where pieces appear when created in Standard Tetris</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When a new piece first appears on the board, its origin coincides with 
the dot on this diagram, and the piece will be completely contained by 
the shaded area on this diagram.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When a new game is started, a full free-fall delay elapses, and on the 
first free-fall iteration a piece is spawned at the top of the board.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
During normal game play, when a specific free-fall iteration "lands" a 
piece, a full free-fall delay elapses and on the next free-fall 
iteration a piece is spawned at the top of the board.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When a piece is spawned, the type of piece is selected using the following algorithm:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 32px; padding-bottom: 32px; border-width: 1px; border-color: #000000; border-style: solid; ">
pieceIndex&nbsp;=&nbsp;<span style="color: #801000;">1</span>&nbsp;+&nbsp;(randomInteger&nbsp;%&nbsp;<span style="color: #801000;">7</span>);&nbsp;&nbsp;<span style="color: #008000;">//&nbsp;1..</span>7</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Because there is a constant <b>p (= 1/7)</b> chance of selecting a 
specific kind of piece, and all pieces of the same type are 
indistinguishable, the probability of having exactly <b>k</b> pieces of a specific type after <b>n</b> trials follows a Binomial distribution:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
P(k)&nbsp;=&nbsp;(1-p)^(n-k)&nbsp;&nbsp;*&nbsp;&nbsp;p^k&nbsp;&nbsp;*&nbsp;&nbsp;(&nbsp;n!&nbsp;/&nbsp;(&nbsp;(n-k)!&nbsp;k!&nbsp;)&nbsp;);<br>
<br>
&nbsp;&nbsp;p&nbsp;&nbsp;=&nbsp;&nbsp;0.0&nbsp;&nbsp;&nbsp;...&nbsp;&nbsp;&nbsp;1.0;<br>
&nbsp;&nbsp;k&nbsp;&nbsp;=&nbsp;&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;...,&nbsp;n;<br>
<br>
mean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;(&nbsp;n&nbsp;*&nbsp;p&nbsp;)<br>
variance&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;(&nbsp;n&nbsp;*&nbsp;p&nbsp;*(1-p)&nbsp;)<br>
standard&nbsp;deviation&nbsp;&nbsp;=&nbsp;sqrt(&nbsp;variance&nbsp;)</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When we choose from among the 7 (seven) pieces at random, the probability of getting a specific piece is <b>p=(1/7)</b>.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If we do this <b>n=70</b> times, for example, the probability of getting exactly <b>k</b> pieces (with <b>k</b> in the range <b>0</b> to <b>n</b>) is given by the binomial distribution, as shown in the following image.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 561px; max-width: 800px; ">
<img src="Tetris_files/binomial_distribution_n70_p7th.jpg" id="ID_binomial_distribution_n70_p7th_jpg" alt="binomial_distribution_n70_p7th.jpg" height="204" width="561"><br><div style="display: inline; ">
<i>Binomial distribution for <b>n=70</b>, <b>p=(1/7)</b></i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Thus, one can predict the average total pieces of a single type given a 
total number of random pieces, and one can also compute the expected 
variance and standard deviation (square root of variance):</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
p&nbsp;=&nbsp;(1/7):<br>
<br>
total&nbsp;random&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;standard<br>
pieces&nbsp;(n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mean&nbsp;&nbsp;&nbsp;&nbsp;variance&nbsp;&nbsp;&nbsp;deviation<br>
============&nbsp;&nbsp;=======&nbsp;&nbsp;========&nbsp;&nbsp;&nbsp;=========<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;70&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;700&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;85&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9<br>
&nbsp;&nbsp;&nbsp;&nbsp;7000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;857&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;29<br>
&nbsp;&nbsp;&nbsp;70000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8571&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;93</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When we convert a random value to a piece index, we interpret it as follows:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
value&nbsp;&nbsp;piece<br>
=====&nbsp;&nbsp;=====<br>
&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"O"<br>
&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"I"<br>
&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"S"<br>
&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Z"<br>
&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"L"<br>
&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"J"<br>
&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"T"</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
[ The pre-commercial MS-DOS version of Tetris used the random number function offered by the Borland Pascal compiler.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
That function used a 32-bit state variable.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Therefore, the sequence of random numbers was limited to <b>2^32</b> distinct values.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Therefore, in principle, a player could discover, after dropping perhaps 10 pieces, the exact place in the set of <b>2^32</b> numbers corresponding to the current state of the game.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If Tetris simulations are executed with the fixed sequence of <b>2^32</b> pieces, then optimal decisions can be found for every place in the sequence.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
(There seem to be sufficient opportunities to being the board to a 
totally empty board state, allowing us to get synchronized with the 
precomputed optimal solution path.)</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The risk of using a simple random number generator in a simulation 
intended to find an optimal solution to a problem is that the solution 
will be optimal only for the particular path through the problem space 
selected by the simple random number generator. ]</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.6 Standard Tetris controls</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
During game play, the following inputs are available:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
left&nbsp;&nbsp;&nbsp;:&nbsp;request&nbsp;to&nbsp;translate&nbsp;left&nbsp;&nbsp;by&nbsp;one&nbsp;column<br>
right&nbsp;&nbsp;:&nbsp;request&nbsp;to&nbsp;translate&nbsp;right&nbsp;by&nbsp;one&nbsp;column<br>
rotate&nbsp;:&nbsp;request&nbsp;to&nbsp;do&nbsp;a&nbsp;counterclockwise&nbsp;rotation<br>
drop&nbsp;&nbsp;&nbsp;:&nbsp;request&nbsp;to&nbsp;instantly&nbsp;drop&nbsp;the&nbsp;piece</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
All inputs take effect on the rising-edge of the positive input (on button press, as opposed to button release).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When a button press occurs, this counts as a request.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Holding a button down beyond a certain time might result in the 
"auto-repeat" feature of a keyboard, generating new button presses -- 
but this feature is external to the game engine.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The inputs specified above conform to the original Tetris game.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Rotate requests can be executed if there is no overlap between the 
desired orientation and set cells on the current board (excluding the 
falling piece), and if the desired orientation has no set cells outside 
the board area.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Translate requests can be executed if there is no overlap between the 
desired translated configuration and set cells on the current board 
(excluding the falling piece), and if the desired translated 
configuration has no set cells outside the board area.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Input requests are processed with a latency that depends on the frame 
rate of the game (example: 75 Hz), and requests take effect (if valid) 
instantly.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
A piece can be dropped without any line falling steps occurring.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
A piece can be translated several times to the left or right, and 
subsequently dropped, all without experiencing an official line falling 
step.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Because a newly spawned piece cannot possibly be rotated (because it is 
stuck against the top edge of the board), the player must accept at 
least one piece falling step if rotations are desired or required.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The effect on the score is insignificant.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.7 Standard Tetris piece "landing"</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If a piece is simply falling, it falls by a single row during each piece falling iteration.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
There will be an iteration that moves it from a place with no contact 
with horizontal surfaces to a place that has contact with horizontal 
surfaces. Once this iterations occurs, the pieces are in resting 
contact.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If an iteration begins with a piece in resting contact with a horizontal
 surface, the piece "lands", and becomes part of the static pile.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.8 Standard Tetris "lines completed"</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
A completed row is a row of the pile in which all cells are occupied. 
When a completed row is eliminated from the pile, and the rows above the
 eliminated row are shifted down by one row to eliminate the gap, this 
counts as a completed "line".</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When a piece lands it becomes part of the pile.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Immediately after the piece lands, the pile is checked for completed rows, and all completed rows are eliminated.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Up to four rows can be completed simultaneously.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following table gives the upper limit on lines completed simultaneously by a single piece:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
piece&nbsp;&nbsp;&nbsp;max.&nbsp;simultaneous<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows&nbsp;completed<br>
=====&nbsp;&nbsp;&nbsp;==================<br>
&nbsp;"O"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<br>
&nbsp;"I"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<br>
&nbsp;"S"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<br>
&nbsp;"Z"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<br>
&nbsp;"L"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<br>
&nbsp;"J"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<br>
&nbsp;"T"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.9 Standard Tetris "levels"</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Standard Tetris has 10 difficulty levels, numbered 1 (one) through 10 (ten), with level 1 being the "least difficult".</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The level index is the maximum of two values:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 32px; padding-bottom: 32px; border-width: 1px; border-color: #000000; border-style: solid; ">
actualLevel&nbsp;=&nbsp;max(&nbsp;initialLevel,&nbsp;earnedLevel&nbsp;);</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The <b>initialLevel</b> value is the level that the player selects when starting a new game.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The pattern of level as a function of completed lines is easily observed in the pre-commercial MS-DOS version of Tetris:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
{&nbsp;0,&nbsp;&nbsp;1,&nbsp;&nbsp;2,&nbsp;...,&nbsp;10&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;&nbsp;1<br>
{&nbsp;&nbsp;&nbsp;&nbsp;11,&nbsp;12,&nbsp;...,&nbsp;20&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;&nbsp;2<br>
{&nbsp;&nbsp;&nbsp;&nbsp;21,&nbsp;22,&nbsp;...,&nbsp;30&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;&nbsp;3<br>
{&nbsp;&nbsp;&nbsp;&nbsp;31,&nbsp;32,&nbsp;...,&nbsp;40&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;&nbsp;4<br>
{&nbsp;&nbsp;&nbsp;&nbsp;41,&nbsp;42,&nbsp;...,&nbsp;50&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;&nbsp;5<br>
{&nbsp;&nbsp;&nbsp;&nbsp;51,&nbsp;52,&nbsp;...,&nbsp;60&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;&nbsp;6<br>
{&nbsp;&nbsp;&nbsp;&nbsp;61,&nbsp;62,&nbsp;...,&nbsp;70&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;&nbsp;7<br>
{&nbsp;&nbsp;&nbsp;&nbsp;71,&nbsp;72,&nbsp;...,&nbsp;80&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;&nbsp;8<br>
{&nbsp;&nbsp;&nbsp;&nbsp;81,&nbsp;82,&nbsp;...,&nbsp;90&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;&nbsp;9<br>
{&nbsp;&nbsp;&nbsp;&nbsp;91,&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;--&gt;&nbsp;earned&nbsp;level&nbsp;10</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Thus, the <b>earnedLevel</b> value is computed according to the following algorithm:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 32px; padding-bottom: 32px; border-width: 1px; border-color: #000000; border-style: solid; ">
<span style="color: #0000ff;">if</span>&nbsp;(linesCompleted&nbsp;&lt;=&nbsp;<span style="color: #801000;">0</span>)<br>
{<br>
&nbsp;&nbsp;earnedLevel&nbsp;=&nbsp;<span style="color: #801000;">1</span>;<br>
}<br>
<span style="color: #0000ff;">else</span>&nbsp;<span style="color: #0000ff;">if</span>&nbsp;((linesCompleted&nbsp;&gt;=&nbsp;<span style="color: #801000;">1</span>)&nbsp;&amp;&amp;&nbsp;(linesCompleted&nbsp;&lt;=&nbsp;<span style="color: #801000;">90</span>))<br>
{<br>
&nbsp;&nbsp;earnedLevel&nbsp;=&nbsp;<span style="color: #801000;">1</span>&nbsp;+&nbsp;((linesCompleted&nbsp;-&nbsp;<span style="color: #801000;">1</span>)&nbsp;/&nbsp;<span style="color: #801000;">10</span>);<br>
}<br>
<span style="color: #0000ff;">else</span>&nbsp;<span style="color: #0000ff;">if</span>&nbsp;(linesCompleted&nbsp;&gt;=&nbsp;<span style="color: #801000;">91</span>)<br>
{<br>
&nbsp;&nbsp;earnedLevel&nbsp;=&nbsp;<span style="color: #801000;">10</span>;<br>
}</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.10 Standard Tetris falling iteration delay</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Standard Tetris has a real-time delay between successive line free-fall 
iterations that is a function of the current difficulty level.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following relationship between level index and falling iteration 
delay is based on repeated stopwatch measurements at all levels of the 
pre-commercial MS-DOS version of Tetris.</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
actualLevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iterationDelay&nbsp;[seconds]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(rounded&nbsp;to&nbsp;nearest&nbsp;0.05)<br>
============&nbsp;&nbsp;&nbsp;&nbsp;=========================<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.50<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.45<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.40<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.35<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.30<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.25<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.20<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.15<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.10<br>
&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.05</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Thus, we establish the following formula for the iteration delay value as a function of the actual level index:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 32px; padding-bottom: 32px; border-width: 1px; border-color: #000000; border-style: solid; ">
iterationDelay&nbsp;=&nbsp;((<span style="color: #801000;">11</span>&nbsp;-&nbsp;actualLevel)&nbsp;*&nbsp;<span style="color: #801000;">0.05</span>);&nbsp;&nbsp;<span style="color: #008000;">//&nbsp;[seconds</span>]</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If the board is empty, and there is no user input, a spawned piece at 
actual level 1 lands in approximately 10 seconds, and a spawned piece at
 actual level 10 lands in approximately 1 second.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">5.11 Standard Tetris "score"</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Standard Tetris only awards points for the act of landing a piece.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
There are no points awarded for the act of completing a single line, or completing two, three, or four lines simultaneously.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
[ Note: Some variants of Tetris award points for the act of completing 
lines, with an exponentially increasing bonus for an increasing number 
of simultaneously completed lines.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Thus, the strategy for maximizing score in such variants of Tetris 
involves setting up opportunities to "get a Tetris", slang for using the
 "<b>I</b>" shape to get four simultaneous lines and getting lots of points. ]</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If you have an empty board, and you let a non-"<b>I</b>" piece do a free-fall and land, or you immediately drop a non-"<b>I</b>" piece, you can establish the following point chart using the pre-commercial MS-DOS version of Tetris:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
actualLevel&nbsp;&nbsp;&nbsp;free-fall&nbsp;&nbsp;&nbsp;instant-drop<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;points&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;points<br>
===========&nbsp;&nbsp;&nbsp;=========&nbsp;&nbsp;&nbsp;============<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;24<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;27<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;33<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;36<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;39<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;42<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;45<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;48<br>
&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;33&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;51</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Unrotated, non-"<b>I</b>" pieces fall a total of 18 rows.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This accounts for the point difference between the free-fall and instant-drop cases.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
By experimenting with intermediate cases it is easy to infer the following point formula:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 32px; padding-bottom: 32px; border-width: 1px; border-color: #000000; border-style: solid; ">
pointAward&nbsp;=&nbsp;(&nbsp;(<span style="color: #801000;">21</span>&nbsp;+&nbsp;(<span style="color: #801000;">3</span>&nbsp;*&nbsp;actualLevel))&nbsp;-&nbsp;freeFallIterations&nbsp;);</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Note that this formula has nothing to do with the distance a piece falls!</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
It is strictly a function of the actual level, and a penalty for the number of iterations a piece is allowed to fall freely.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This punishes a user for needing time to think.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Also note that because a piece cannot initially be rotated when it first
 spawns, a player is punished by at least one free-fall iteration if 
rotations are required to place a piece in the pile.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This probably never affects human players, unless they somehow: 
recognize the piece, press translation keys ("left" or "right"), press 
the "rotate" key one or more times, and press the "drop" key, all within
 less than 0.5 seconds at level 1, or less than 0.05 seconds at level 
10.</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">6. Standard Tetris strategy</h1>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.1 Introduction</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
A strategy for playing a game depends on the rules of the game.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
A strategy depends on which parameter is to be optimized.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In Standard Tetris, one survives by completing rows, gets points for 
landing pieces, and scores the most points possible for each piece by 
executing a drop before one or more free-fall iterations transpire.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
An A.I. can optimize the points awarded for each piece simply by 
deciding on a move quickly and "pressing the keys" to execute the move.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
More important to an A.I. is survival, because indefinite survival means
 an arbitrarily high score can be attained. Because the Tetris pieces 
fall at a specific rate, the A.I. must make decisions at least this fast
 -- and the A.I. must make moves that complete rows at a rate that 
averages at least 1 row per 2.5 pieces. (Each piece has 4 cells, and 
each row has 10 cells.)</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Of course one can postpone completing rows by accumulating pieces and 
building a large pile, but there are only 200 cells on the entire board,
 which in principle can only hold 50 pieces, so any player (such as an 
A.I.) must have completing lines as a fundamental priority.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In Standard Tetris, the game state includes the current board occupation
 and the current falling piece (type, position, and orientation). The 
game state may optionally include the "Next Piece".</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.2 An alternating sequence of "S" and "Z" pieces</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Heidi Burgiel, Ph.D., of the Department of Mathematics, Statistics and 
Computer Science at the University of Illinois at Chicago, has proved 
that an alternating sequence of "<b>S</b>" and "<b>Z</b>" pieces will force a standard (10-column, 20-row) Tetris game to end within a predictable number of moves.</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.math.uic.edu/%7Eburgiel/Tetris/explanation.html">http://www.math.uic.edu/~burgiel/Tetris/explanation.html</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Quote from the article: "You can't win a game in which only alternating 'S' and 'Z' pieces appear."</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Associated printed article: Mathematical Gazette, July 1997, "How to Lose at Tetris"</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Heidi Burgiel offers a Java applet that runs in a Internet browser that 
features an altered Tetris clone that spawns alternating "<b>S</b>" and "<b>Z</b>" pieces.</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.math.uic.edu/%7Eburgiel/Tetris">http://www.math.uic.edu/~burgiel/Tetris</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
[ The "Standard Tetris" software associated with the document you are reading also has a mode which spawns alternating "<b>S</b>" and "<b>Z</b>" pieces. ]</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Heidi Burgiel claimed that a game involving alternating "<b>S</b>" and "<b>Z</b>" pieces (for a standard Tetris board of 10 columns and 20 rows) must end before fewer than 70,000 pieces have fallen.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The Standard Tetris software included with this document enables a person to play games with alternating "<b>S</b>" and "<b>Z</b>" pieces, and change the board width.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
It is easy to see that boards whose widths are integer multiples of four
 columns (examples: 4 columns, 8 columns, 12 columns, etc) can be played
 forever when pieces alternate between "<b>S</b>" and "<b>Z</b>", with 
the pile rising no higher than 4 rows. I mention this to make it clear 
that the limited survivability described in the research document 
mentioned above is specifically for the case of a standard Tetris board 
(with 10 columns and 20 rows).</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.3 Unsolvable piece sequences in general</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
There are whole categories of pathological sequences that cannot be survived.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
It would be interesting to compute the total probability of encountering
 a game-terminating sequence, because this would put an upper bound on 
the performance of any strategy, even with complete knowledge of all 
future pieces at any given point in a game.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.4 Total possible board configurations</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Given that the board has <b>10 * 20 = 200</b> cells, and given that each
 cell can only be in one of two states (empty or occupied), the total 
number of board configurations must be less than or equal to: <b>(2 ^ 200)</b>.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Given that each piece adds 4 cells to a board, and each row completion 
eliminates 10 cells from the board, the number of occupied cells on the 
board will always be even. For example, <b>(3*4 - 1*10) = 2</b>, <b>(1*4 - 0*10) = 4</b>, <b>(4*4 - 1*10) = 6</b>, <b>(2*4 - 0*10) = 8</b>, <b>(5*4 - 1*10) = 10</b>, etc. Thus, only half of the <b>(2 ^ 200)</b> board configurations can be reached by playing the game.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Thus, the total number of board configurations is approximately: <b>(2 ^ 199) = 8.03469... * 10^59</b>.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
However, we should exclude from our total any configuration that 
includes filled rows, because filled rows are eliminated before the end 
of each completed move. Any configuration with one or more filled rows 
will collapse to another configuration that does not contain any filled 
rows.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Also, we should exclude any configuration that includes a non-empty row 
above one or more empty rows, because a non-empty row above an empty row
 will always fall, and all falling stops before the end of each move.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Each row can be in <b>2^10 = 1024</b> states, one of which is "empty", one of which is "full", and <b>(1024 - 2) = 1022</b> of which are partially-occupied. We exclude the "full" case from consideration.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If the bottom row is empty, then all rows above the bottom row must also be empty.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If the bottom row is partially-occupied, then the second row can be empty or partially-occupied.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Continuing this analysis, we can compute a number of board 
configurations that takes in to account the exclusion of full rows and 
the restrictions on empty rows: <b>1 + (1022 * (1 + 1022 * (1 + 1022 * (1 + 1022 * (... * (1023))))))</b>, which is approximately <b>((1022 ^ 19) * (1023))</b>.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Thus, we find a more precise estimate of the total number of stable board configurations: <b>(1/2) * ((1022 ^ 19) * (1023)) = 0.9625... * (2 ^ 199)</b>; i.e., roughly 3.74% less than the <b>(2 ^ 199)</b> estimate.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
However, the actual number of stable, accessible board states is likely 
to be notably lower due to the fact that the top-most rows can only be 
filled in a few ways. As the top-most rows fill, a newly generated piece
 cannot be moved or rotated very much. This limits the number of ways 
the top-most rows can be filled.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.5 In principle, the best move can be found for any board and piece configuration</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Because we can get any of seven possible pieces for any given board state, the total number of game states is approximately <b>7 * (2 ^ 199) = 5.624... * 10^60</b>.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Because we can, in principle, do a deep search of all possible futures 
for all possible moves for a given game state, we can have a single 
"best" move associated with each game state.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
We assume that we do not have access to any information other than the 
current board and current piece, so "best" means "the move that offers 
the greatest chance of satisfying our long-term goal of survival".</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
A move is just a translation (up to 10 options) and a rotation (up to 4 
options), we can easily encode the best move in a single byte.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
So, in principle, we could form a table with <b>10^61</b> entries (bytes) that told us the best move given any board state and current piece.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Of course this is impractical, just as enumerating all "Go" boards or 
"Chess" boards is impractical. But the point is that there IS one true 
solution, and there is a best move for any given configuration. There 
might be equally good moves for a given configuration, but we can 
arbitrarily choose a single move in that case.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Many game-playing algorithms have tables that exhaustively enumerate all
 game state possibilities within limited contexts, such as "opening 
(initial) moves" or "end-game (final) moves" in Chess. Perhaps 
exhaustive enumeration of Tetris pile surfaces (approximately <b>(20 ^ 10)</b> states) is feasible. It's an interesting idea.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Exhaustive enumeration of all states of the bottom two rows, multiplied 
by the seven possible pieces, and storing the best move in a single 
byte, would be quite easy; requiring only 7 MB of memory. Perhaps 
optimizing performance for these seven million cases would provide raw 
data for both analysis and the development of simple models for the 
data; such models could be regarded as part of the overall ideal 
Tetris-playing strategy.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Note that executing best moves still does not protect us against 
possible pathological game-terminating piece sequences. It's just that 
we will always perform moves that offers us the maximum potential for 
future survival given that all future pieces are totally random (and 
unknown at the time we are to decide how to move a single current known 
piece).</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.6 Real-time performance</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
One constraint facing some strategy algorithms is the need for real-time
 performance -- meaning that the algorithm must make a decision within a
 specific amount of time.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When a human plays Tetris, the pieces don't stop falling to give the 
player a chance to think. That's part of the challenge of Tetris. Thus, 
an A.I. system that is meant to simulate the role of a human player must
 also make decisions at a rate dictated by the Tetris game.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.7 Row and piece totals</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Note that in the long-term, the number of dropped pieces is very close 
to 2.5 times the number of completed rows -- because each row has 10 
cells, and each piece is 4 cells, and we must complete a row, on 
average, once every <b>(10/4) = 2.5</b> pieces dropped.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
So we can use "completed rows" and "dropped pieces" almost 
interchangeably with the appropriate proportionality constant. The 
largest error is when the board is completely filled except for a single
 gap in each row <b>(((10*20)-20)/4) = 45</b> pieces dropped but a deficiency of the predicted <b>(45/2.5) = 18</b> completed rows.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.8 Current-piece (and board) strategy</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If we only allow the A.I. to have knowledge of the current board and the
 current piece, and we only consider the result of moving the current 
piece in particular ways, then this can be named a "one-piece" analysis.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Here is a rough sketch of how a one-piece analysis can decide upon a move in Tetris:</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_piece_drop_with_metrics01.jpg" id="ID_tetris_piece_drop_with_metrics01_jpg" alt="tetris_piece_drop_with_metrics01.jpg" height="575" width="640"><br><div style="display: inline; ">
<i>Current-piece analysis of a Tetris game state</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Basically we try all possible moves and pick the move that yields the best result.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The difficult part is rating each result.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
We must rate a hypothetical game state according to how well such a state supports our short-term and long-term goals.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Our long-term goal is survival. Survival depends on preventing the pile 
from overflowing the board. We can reduce the pile height by forming 
complete rows which are then eliminated from the pile.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
To form a complete row, we must fit parts of pieces in to every column 
of that row. Thus, we require all parts of a row to be exposed to the 
falling pieces if we are to eventually fill in the entire row.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If for some reason we cover up empty parts of a row by pieces on any 
higher row, then we are now unable to fill in those empty parts of the 
row. The only way (assuming no sliding) to access those "buried holes" 
is to eliminate the rows above that have parts acting as obstacles.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following factors are among those we can use to rate a given board state:</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; ">
<div style="background-color: #ffffff; border-width: 1px; border-color: #000000; border-style: solid; ">
<div style="background-color: #ffffff; padding-left: 16px; padding-right: 16px; padding-top: 16px; padding-bottom: 16px; border-color: #000000; ">
<div style="display: inline; background-color: #ffffff; border-color: #000000; ">


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
<b>Overall pile height</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
The higher the pile, the worse our situation seems to be, because we are closer to overflowing the board.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
<b>Roughness of pile area (number of times cells alternate between empty and filled as any row or column is scanned)</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
The rougher the pile, the more likely it is that it will be difficult to
 fill in all of the embedded complex contours as they become exposed to 
the surface.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
<b>Number of buried empty cells</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; border-color: #000000; ">
The more holes we have buried, the worse our situation is, because we 
must uncover buried holes before we can complete the corresponding rows.</div>


</div>
</div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
You can imagine other factors that generally rate a hypothetical board 
on how well its pile can accommodate all of the possible future pieces, 
and how good the situation looks for all of those possible pieces.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The next issue is how to determine the relative importance of these factors.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
One general approach is the following. Assign a set of "weights" 
(relative importance) to these factors, and then simulate numerous games
 and record the outcome of these games (final score, etc). Then, assign a
 new set of weights and simulate a new set of games. Based on whether or
 not the new set of games had better outcomes than the previous set of 
games, we know if the new set of weights was better than the previous 
set of weights.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In my own experiments I tried systematic searching and random searching 
for good weight combinations, but I didn't notice any large-scale trends
 that I could pursue. However, I saw many surprisingly smooth bumps. I 
thought it was interesting that the average performance could form a 
smooth curve when a parameter was slowly varied with the other 
parameters held at some value combination.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The best real-time, one-piece Tetris algorithm in the world, created by 
Pierre Dellacherie (France) in 2003, owes much of its success to its set
 of measurements (or metrics). Finding weights is necessary when 
optimizing a strategy, but it is also critical to start with the kinds 
of measurements that reveal the relevant characteristics of the state.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Pierre Dellacherie's invention of new ways to characterize each board 
makes his algorithm really excellent; the board characterizations 
capture the important strategic dimensions of the board state.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
One could develop a very different set of characterization dimensions 
that worked equally well; I am confident that it is possible to span the
 relevant board state space in many different ways that can be used to 
specify a strategy function. The key is to find characteristics that 
project the state space down to a small number of dimensions that can be
 used to develop a simple rating function (example: the linear weighted 
combinations of characteristics used by Pierre's algorithm).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The one-Piece algorithm used by the "bot" in the "xtris" software (1996)
 written by Roger Espel Llima uses weights determined by a large-scale 
exploration of possible weight combinations by "genetic algorithms". 
Simulated annealing is another possible method of exploring the 
multidimensional space of weight combinations.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
It seems that, based on various observations, the multidimensional 
function of average Tetris performance as a function of the weights, 
example: <b>F(w1,w2,w3,...)</b>, is "rough" (lots of local minima and maxima), which means that a simple multidimensional "hill climbing" might not work.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.9 Strategy when current piece, next piece, and board are known</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If a strategy algorithm is given the current piece, next piece, and 
board, then it can make decisions that take advantage of the combination
 of pieces.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Knowledge of the next piece can improve the success of a Tetris playing 
algorithm by several orders of magnitude. It's easy to comprehend how 
knowing the next piece makes a big difference in strategy.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
One can do "crazy" moves, such as covering huge holes, etc, because they
 already know that the next piece can be used to "fix" the situation. If
 you do not have knowledge of the next piece, you are constantly trying 
to play the odds, trying to keep your options open in case the next 
piece is not ideal.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following sketch shows how all of the possible moves of the current 
piece are considered, and for each such move we consider all possible 
moves involving the next piece.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_piece_and_next_with_metrics01.jpg" id="ID_tetris_piece_and_next_with_metrics01_jpg" alt="tetris_piece_and_next_with_metrics01.jpg" height="841" width="640"><br><div style="display: inline; ">
<i>Strategy involving current piece and next piece</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The Standard Tetris software uses this strategy when the "Next Piece" is
 enabled by the user and is visible on the screen, and when a two-piece 
A.I. is enabled (such as the one written by me, Colin Fahey). If the 
"Next Piece" is not visible on the screen, my two-piece falls back to a 
one-piece A.I..</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
My one-piece A.I. is terrible when compared to the other AIs in the 
Standard Tetris software; so this shows you beneficial more information 
(example: the next piece) can be to an A.I. system; it is enough to 
improve the performance of my own mediocre two-piece A.I. by several 
orders of magnitude -- easily surpassing the performance of the best 
one-piece A.I. in the world.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
(However, converting the best one-piece A.I. in the world to consider 
two pieces would easily improve it by several orders of magnitude, too! 
Knowing the next piece is huge!)</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
My first test game with my two-piece A.I. lasted roughly 182 hours (7.6 
days) on an 800 MHz PC, completing 7216290 rows. I have not tested the 
algorithm on a faster computer.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When you save the state of a Tetris game (Shift-W) to a text file, you 
can then copy and paste the list of numbers, from the section "<b>heightHistogram</b>", to an Excel spreadsheet.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Each bin in the histogram indicates the number of completed moves that 
ended with a particular pile height (after complete rows are 
eliminated). As you can imagine, making a move that totally eliminates a
 pile is rare, so the total number of moves that ends with a pile height
 of zero is relatively low.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Meanwhile, you might expect that the pile height generally fluctuates 
around some average, so bins corresponding to these rows will dominate 
the histogram. Finally, bins for the top-most rows (where we are in 
danger of overflowing the board) have very low totals.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Over the course of many hours, with the A.I. playing a single game using
 the strategy involving knowledge of the "Next Piece", I took random 
samples of the game state, copying the pile height histograms to a 
spreadsheet as shown below:</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/std_tetris_pile_height_hist_raw01.jpg" id="ID_std_tetris_pile_height_hist_raw01_jpg" alt="std_tetris_pile_height_hist_raw01.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Pile height histograms recorded at various points in a typical game (with current-and-next-piece strategy)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
You can scale each histogram by the total number of pieces (total number of completed moves) to get the following data:</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/std_tetris_pile_height_hist_scaled01.jpg" id="ID_std_tetris_pile_height_hist_scaled01_jpg" alt="std_tetris_pile_height_hist_scaled01.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Scaled histograms, and a theory</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The remarkable thing is that these scaled histograms look identical 
despite the different orders of magnitude of the number of pieces 
(completed moves) involved.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Just by looking at the numbers I made the hypothesis that the tail of 
the curve is an exponential decay. By trial and error I came up with the
 rough theory that the tail was described by:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
relative_frequency&nbsp;=&nbsp;((0.122)&nbsp;*&nbsp;((0.375)^(row-5)))</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following graph shows the scaled histogram over the entire range of rows.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/std_tetris_pile_height_hist_curve_full01.jpg" id="ID_std_tetris_pile_height_hist_curve_full01_jpg" alt="std_tetris_pile_height_hist_curve_full01.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Graph of scaled histograms</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Note that the curve for 50000 pieces, and the curve for 2000000 pieces, 
and the curve of the tail theory are almost indistinguishable at this 
scale.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following is a closer look at the head of the curve.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/std_tetris_pile_height_hist_curve_head01.jpg" id="ID_std_tetris_pile_height_hist_curve_head01_jpg" alt="std_tetris_pile_height_hist_curve_head01.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Lower part of height histogram</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following is a greatly-magnified view of the extreme tail end of the measured and theoretical histogram curves.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/std_tetris_pile_height_hist_curve_tail01.jpg" id="ID_std_tetris_pile_height_hist_curve_tail01_jpg" alt="std_tetris_pile_height_hist_curve_tail01.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Magnified view of extreme tail end of scaled histograms</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
As you might expect, it is very rare for the pile to reach these heights
 in even long experiments -- but even with our limited evidence in this 
extreme region, the theory still seems acceptable.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In the full chart the theory seems to overlap the tail of the 
distribution "exactly", whereas in the magnified chart of the tail of 
the tail, we see apparent error. However, I assert that this is due to 
insufficient data at these extreme pile heights. If I increased the game
 board to, say, a height of 25 rows instead of 20 rows, so that games 
didn't terminate abruptly, I think the theory I presented above would 
coincide perfectly with the trend.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
My feeling is that this histogram is a direct combined result of the 
Tetris A.I. and the rules of Tetris. So, this same distribution will be 
observed for any random long-term game of Tetris using <i>my</i> particular A.I. strategy for playing with "Next Piece" knowledge.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Furthermore, I think this type of histogram can be used to compare AIs 
that employ the same information while playing. Thus, you do not have to
 play complete games (which could last for days or years) to compare the
 long-term performance of different strategy algorithms.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
For example, despite the simplicity of my model, I think it can be used 
to predict the average game duration! We simply figure out how many 
pieces makes the "row 21" pile height a significant number, such as a 
count of one.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The relative frequency for row 21, according to my simple theory, is:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
((0.122)&nbsp;*&nbsp;((0.375)^(&nbsp;21&nbsp;-5&nbsp;)))&nbsp;=&nbsp;1.8&nbsp;*&nbsp;10^(-8)</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
You must multiply this number by <b>(5.3 * 10^(7))</b>, roughly 50 million, to get a value of one.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Thus, I roughly predict that my current "Next Piece" strategy is only 
good for on the order of roughly 10 million completed rows. One reason I
 make this conservative estimate is the fact that even 18 rows can be 
deadly for my A.I. because I don't allow my A.I. to consider pieces 
until they've fallen by at least one row! (This is so I don't have to 
worry about not being able to rotate pieces.)</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I am impressed by the fact that playing only 50000 pieces (and possibly 
much fewer pieces) can give you an extremely good estimate of the 
long-term height histogram, and hence, a good estimate of the order of 
magnitude of completed rows before the game ends. This approach is 
extremely valuable for quickly evaluating subtle changes in an A.I. that
 is already doing extremely well.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">6.10 Board evaluation metrics imitate speculative look-ahead</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If an algorithm, such as the one I presented with this project, simply 
tries all piece orientations and translations for dropping, and rates 
each resulting board configuration according to some measure of merit, 
the algorithm is essentially imitating "look-ahead".</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When one employs metrics such as "pile height", "buried holes", "surface
 roughness" or "well depths", one is really using a simplified form of 
"look ahead". These general characterizations of the board give some 
indication of the long-term viability of the board.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The ideal approach, given an infinite amount of computing power, would 
be to evaluate a board configuration given all possible piece sequences 
that can follow.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Although you must consider all 7 pieces as being equally probable at 
each level of look-ahead, you need to optimize the actual translations 
(up to 10) and orientations (up to 4) for each piece in every possible 
sequence! That's up to <b>(7*10*4) = 280</b> branches at every level of the board evaluation! So, that's up to <b>((280)^(LookAheadLevels))</b> board configurations to consider.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Because we must terminate the analysis after a finite number of levels, 
we need to have some non-look-ahead method of evaluating the board state
 -- a way of giving values to the leaf nodes of our search tree. So, for
 these leaf nodes, we are back to using a formula that embodies general 
predictors of future viability of the board!</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This type of speculation can be tried with the One-Piece and Two-Piece 
algorithms in place of the simplistic board evaluation metrics. Assume 
all subsequent pieces are equally probable and sum up the abilities of a
 board to accommodate pieces of all kinds in the best possible ways. 
This can be carried out with one, two, or any number of speculative move
 depths -- with all pieces being equally probable (<b>p=1/7</b>).</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The terminal nodes of this tree might still require the weighted metrics
 to evaluate, but the speculative layers more precisely capture the 
essence of what we want to do: Determine how well a given board can 
accept all possible pieces, including positive factors such as 
completing lines and negative factors such as increasing overall pile 
height, etc.</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">7. Tetris A.I. system demonstration</h1>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">7.1 System overview</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This following diagram shows my experimental set-up.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_diagram_overall_system_03.jpg" id="ID_tetris_diagram_overall_system_03_jpg" alt="tetris_diagram_overall_system_03.jpg" height="375" width="640"><br><div style="display: inline; ">
<i>Overall system for demonstration</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">7.2 Equipment</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Here is a brief list of the equipment used in this demonstration:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
[1]&nbsp;Ontrak&nbsp;Control&nbsp;Systems&nbsp;ADR2200&nbsp;RS-232&nbsp;8-Relay&nbsp;Board:&nbsp;$149.00&nbsp;(USD&nbsp;2003)<br>
[2]&nbsp;Ontrak&nbsp;Control&nbsp;Systems&nbsp;ADRPWR&nbsp;Power&nbsp;Supply&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;$&nbsp;12.95&nbsp;(USD&nbsp;2003)<br>
[3]&nbsp;Creative&nbsp;WebCam&nbsp;Pro&nbsp;(640x480&nbsp;USB&nbsp;video&nbsp;camera)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;$&nbsp;39.95&nbsp;(USD&nbsp;2003)</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Clearly you can use similar equipment to accomplish the same results. 
More details regarding the equipment are described in the corresponding 
sections of this article.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Here are brief descriptions of the personal computers used in this demonstration:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
[1]&nbsp;Personal&nbsp;Computer&nbsp;(PC),&nbsp;350&nbsp;MHz,&nbsp;Windows&nbsp;98&nbsp;&nbsp;&nbsp;[Runs&nbsp;video&nbsp;game]<br>
[2]&nbsp;Personal&nbsp;Computer&nbsp;(PC),&nbsp;800&nbsp;MHz,&nbsp;Windows&nbsp;2000&nbsp;[Runs&nbsp;AI&nbsp;program]</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This demonstration could easily be reproduced with other operating 
systems, such as Linux. It is more important to have a CPU speed on the 
order of 800 MHz or faster for the computer that is to run the A.I. 
software, because this computer will be doing real-time processing of 
video.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">7.3 Video capture hardware</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I used a common USB video camera as a video capture device for my A.I. 
system. Specifically, I used the Creative "WebCam Pro", a USB video 
camera with <b>640 * 480</b> resolution.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://us.creative.com/products"><img src="Tetris_files/creative_web_cam_pro_site.jpg" id="ID_creative_web_cam_pro_site_jpg" alt="creative_web_cam_pro_site.jpg" height="495" width="640"></a><br><div style="display: inline; ">
<i>Creative(TM) USB video camera description</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://us.creative.com/products">http://us.creative.com/products</a></div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 512px; max-width: 800px; ">
<img src="Tetris_files/tetris_web_cam_angle.jpg" id="ID_tetris_web_cam_angle_jpg" alt="tetris_web_cam_angle.jpg" height="384" width="512"><br><div style="display: inline; ">
<i>USB video camera (at angle)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 512px; max-width: 800px; ">
<img src="Tetris_files/tetris_web_cam_front.jpg" id="ID_tetris_web_cam_front_jpg" alt="tetris_web_cam_front.jpg" height="384" width="512"><br><div style="display: inline; ">
<i>USB video camera (front)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 512px; max-width: 800px; ">
<img src="Tetris_files/tetris_web_cam_ccd.jpg" id="ID_tetris_web_cam_ccd_jpg" alt="tetris_web_cam_ccd.jpg" height="384" width="512"><br><div style="display: inline; ">
<i>USB video camera (board with CCD)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 512px; max-width: 800px; ">
<img src="Tetris_files/tetris_web_cam_chips.jpg" id="ID_tetris_web_cam_chips_jpg" alt="tetris_web_cam_chips.jpg" height="384" width="512"><br><div style="display: inline; ">
<i>USB video camera (main chips)</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 564px; max-width: 800px; ">
<img src="Tetris_files/tetris_web_cam_ov511_blocks.jpg" id="ID_tetris_web_cam_ov511_blocks_jpg" alt="tetris_web_cam_ov511_blocks.jpg" height="470" width="564"><br><div style="display: inline; ">
<i>OV511 main blocks (note: USB video camera is OV511+)</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">7.4 OV511 data sheet</h2>




<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.colinfahey.com/tetris/ov511ds.pdf">ov511ds.pdf</a><br>
OV511 Data Sheets<br>
1136328 bytes<br>
MD5: e927d786e16baea59b7e7e54529778c0<br>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">7.5 OV511+ ("plus") feature differences</h2>




<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.colinfahey.com/tetris/ov511plus_101.pdf">ov511plus_101.pdf</a><br>
OV511+ Feature Differences<br>
56271 bytes<br>
MD5: 388a03c56d6f67d6d5d80e3d06c4de21<br>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">7.6 Video capture software</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Microsoft has a very old API named "Video for Windows" (VFW) that I 
successfully used for this project. (You link to "vfw32.lib" in your C++
 project, or do a DllImport of "vfw32.dll" in your C# code.) Examples of
 using the VFW API are widely available.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
An alternative is to use Microsoft's "DirectShow" API to do video capture.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Beacuse VFW took only a dozen lines of code to use, and performed 
acceptably on my 800 MHz machine, I didn't bother exploring the 
alternative APIs. But DirectShow is a more contemporary API for Windows 
video capture, and potentially yields a much higher frame rate for the 
same hardware.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Look at the "CPF.StandardTetris.STVideoCapture" source code files in the
 Standard Tetris software to see how easy it is to get video capture in 
to your own projects.</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">7.7 Computer interface to relays (via RS232)</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
To have one computer "press keys" on the keyboard of another computer, I
 used a "relay board" controlled by text commands sent from a serial 
communication port (example: "COM1") via an RS-232 cable. I used each 
relay to connect the two wires of a specific keyboard key to simulate a 
key press.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This required opening up the keyboard and making connections. There are 
many easier methods for simulating key pressing at a computer, but I 
wanted to do something that seemed as close as possible to a person 
really typing on a keyboard.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
One very versatile and well-made relay board is the ADR2200 made by Ontrak Control Systems:</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/ontrak_adr2200_board.jpg" id="ID_ontrak_adr2200_board_jpg" alt="ontrak_adr2200_board.jpg" height="363" width="640"><br><div style="display: inline; ">
<i>Ontrak Control Systems ADR2200 RS232 / RS485 Relay I/O Interface</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://www.ontrak.net/adr2200.htm"><img src="Tetris_files/ontrak_adr2200_web_site.jpg" id="ID_ontrak_adr2200_web_site_jpg" alt="ontrak_adr2200_web_site.jpg" height="625" width="640"></a><br><div style="display: inline; ">
<i>Ontrak Control Systems ADR2200 RS232 / RS485 Relay I/O Interface</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://www.ontrak.net/adr2200.htm">http://www.ontrak.net/adr2200.htm</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
You can look at the "CPF.StandardTetris.STRS232" source code files to 
see how easy it is to send bytes through a serial port, which can then 
be used to control devices such as the ADR2200 board shown above.</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">8. Standard Tetris software</h1>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.1 Download software</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Go to the beginning of this article to find a link to download the source code (C# and C++ versions) and built software (*.exe).</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.2 Summary of features</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Software features:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
Instruction screens and credits<br>
Monochrome mode<br>
Shadow mode<br>
Hint mode<br>
Junk rows<br>
Rate control<br>
Next piece<br>
Board size<br>
S/Z pieces<br>
Calibration mode<br>
Video capture and recognition<br>
Debugging console<br>
Save game<br>
Load game</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.3 Starting appearance</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Appearance when the software is started:</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_startup.jpg" id="ID_tetris_app_startup_jpg" alt="tetris_app_startup.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Appearance when the software is started</i></div>
</div>
</div>


<div class="vpad16"></div>
<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.4 Monochrome mode</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
By default the board appears in color:</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_colormode01.jpg" id="ID_tetris_app_colormode01_jpg" alt="tetris_app_colormode01.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>By default the board appears in color.</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The color mode can be changed to monochrome (Shift + K):</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_colormode02.jpg" id="ID_tetris_app_colormode02_jpg" alt="tetris_app_colormode02.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>The color mode can be changed to monochrome.</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.5 Shadow mode</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Shadow mode indicates where a piece will land. This is very helpful for 
very large boards, because it is difficult to judge where a piece will 
land.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_shadowmode.jpg" id="ID_tetris_app_shadowmode_jpg" alt="tetris_app_shadowmode.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Shadow mode indicates where a piece will land.</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.6 Hint mode</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Hint mode shows you where the currently-selected AI would move given the current situation. (Shift + H)</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_hintmode.jpg" id="ID_tetris_app_hintmode_jpg" alt="tetris_app_hintmode.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Hint mode shows where the currently-selected AI would move.</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.7 Junk rows</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Insert "junk" rows at the bottom of the pile, one by one, manually. (Shift + J)</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_junkrows.jpg" id="ID_tetris_app_junkrows_jpg" alt="tetris_app_junkrows.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Insert "junk" rows at the bottom of the pile.</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.8 Rate control</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The '+' (plus) and '-' (minus) keys control the speed of the game.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
By default, the game runs at a standard speed, according to the rules of Standard Tetris (speed based on level).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Here is a table of the meanings of speed bias:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
-3,-4,...: slowness proportional to bias<br>
-2 : slower than level 1<br>
-1 : normal, but limited to level 6 (0.2 sec) speed;<br>
0 : normal; Standard Tetris speed control;<br>
+1 : slightly faster than level 9 (0.05 sec delays);<br>
+2 : bounded by rendering rate (example: 75 Hz);<br>
+3,+4,... : multiple iterations per rendered frame;<br>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I like to run the A.I. at a setting of "+2" (hit '+' key twice if bias starts at zero).</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_speedcontrol.jpg" id="ID_tetris_app_speedcontrol_jpg" alt="tetris_app_speedcontrol.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Speed bias alters the speed of the game.</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.9 Show next piece</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Hit 'N' to toggle the "Next Piece" display. The A.I. will use the "Next 
Piece" information only if the "Next Piece" appears on the screen.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
You can be assured that the AI is not using "Next Piece" information when you cannot see the "Next Piece" on the screen.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_nextpiece.jpg" id="ID_tetris_app_nextpiece_jpg" alt="tetris_app_nextpiece.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Show the next piece</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.10 Board size</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Pressing Ctrl + {left, right, down, up}, one can adjust the board size to arbitrary sizes from <b>4 * 4</b> up to <b>200 * 400</b>.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_boardsize.jpg" id="ID_tetris_app_boardsize_jpg" alt="tetris_app_boardsize.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Board size : 4 * 8</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_board20x40.jpg" id="ID_tetris_app_board20x40_jpg" alt="tetris_app_board20x40.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Board size : 20 * 40</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_board40x80.jpg" id="ID_tetris_app_board40x80_jpg" alt="tetris_app_board40x80.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Board size : 40 * 80</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_board20x5.jpg" id="ID_tetris_app_board20x5_jpg" alt="tetris_app_board20x5.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Board size : 20 * 5</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_board4x100.jpg" id="ID_tetris_app_board4x100_jpg" alt="tetris_app_board4x100.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Board size : 4 * 100</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.11 S/Z pieces only</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Study the interesting alternating S/Z pattern.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This pattern cannot be solved for a <b>10 * 20</b> board (width * height).</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
However, boards that have widths that are multiples of 4 are trivially shown to permit infinite survival.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The AIs survive indefinitely in these cases, even though they weren't specifically tuned to handle this pathological situation.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_sz_pieces.jpg" id="ID_tetris_app_sz_pieces_jpg" alt="tetris_app_sz_pieces.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>S/Z pieces only</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.12 Video calibration mode</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Hit 'C' to enter "Calibration Mode". When in calibration mode, you can 
hit the number keys: {1,2,3,4,5,6,7} to select a piece {O,I,S,Z,L,J,T} 
at the top of the playing board.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This is useful as a reference image for the video capture on a second Standard Tetris software.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If you hit the 0 (zero) key, it will make the board blank.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
You can pretend to spawn pieces by selecting a piece (1..7), and then 
selecting a blank (0), while a second computer doing video capture 
watches for pieces.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
You can run the A.I. on the second computer and see how it deals with your manually entered pathological Tetris scenarios!</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Calibration Mode is the only time you can manipulate the video capture 
image processing template (4 * 2 grid). You can use the mouse to draw 
the rectangle, but then you can use the cursor keys ("up", "down", 
"left", "right") to have fine control of the borders -- using the Shift 
key to select opposite borders of the rectangle (example: "Shift-left" 
combo is different than "left").</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_calibrate.jpg" id="ID_tetris_app_calibrate_jpg" alt="tetris_app_calibrate.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Video calibration mode</i></div>
</div>
</div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">8.13 Video capture and recognition</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Pressing 'V' toggles the video capture mode. If properly calibrated (see
 "video calibration" in a previous section), the pieces of a remote 
video screen will be captured by the video camera and classified -- and 
the pieces will be spawned in the local game for the A.I. to consider 
and react.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The A.I. output must then be transmitted (via the RS-232 interface in 
the demonstration described in this article) to the remote game input 
(example: keyboard) for the A.I. to successfully play the remote game.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
If at any time this closed loop is disturbed (example: video capture 
malfunction, or output signal malfunction), then the A.I. will develop a
 false impression of the status of the remote game, and the A.I. will 
make inappropriate decisions that quickly lose the game.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
(Note: This problem can be overcome with a modest amount of effort: The 
A.I. system need only examine the entire remote Tetris screen for an 
ongoing "reality check" of the whole board, and the A.I. system should 
be prepared for some output commands to fail in some manner.)</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_app_videocapture.jpg" id="ID_tetris_app_videocapture_jpg" alt="tetris_app_videocapture.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Video capture and recognition</i></div>
</div>
</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">9. Original Tetris AI experiment (2003)</h1>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The following shows the first working version of the Tetris A.I. system in 2003.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 512px; max-width: 800px; ">
<img src="Tetris_files/standard_tetris_demo_camera.jpg" id="ID_standard_tetris_demo_camera_jpg" alt="standard_tetris_demo_camera.jpg" height="384" width="512"><br><div style="display: inline; ">
<i>Video camera facing computer #1 running any plain Tetris game</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 512px; max-width: 800px; ">
<img src="Tetris_files/standard_tetris_demo_ai.jpg" id="ID_standard_tetris_demo_ai_jpg" alt="standard_tetris_demo_ai.jpg" height="384" width="512"><br><div style="display: inline; ">
<i>Computer #2 running Standard Tetris software in A.I. mode</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 480px; max-width: 800px; ">
<img src="Tetris_files/standard_tetris_pattern_sequence.jpg" id="ID_standard_tetris_pattern_sequence_jpg" alt="standard_tetris_pattern_sequence.jpg" height="585" width="480"><br><div style="display: inline; ">
<i>Left: Drawing grid to calibrate video image recognition;<br>
Right: Tetris piece recognition cases.</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 534px; max-width: 800px; ">
<a href="http://www.colinfahey.com/tetris/standard_tetris_demo_movie.avi"><img src="Tetris_files/tetris_experiment_video_clip_frame.jpg" id="ID_tetris_experiment_video_clip_frame_jpg" alt="tetris_experiment_video_clip_frame.jpg" height="392" width="534"></a><br><div style="display: inline; ">
<i>Frame from video of Tetris A.I. experiment in 2003</i></div>
</div>
</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">10. Best one-piece Tetris-playing algorithm in the world</h1>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">10.1 Pierre Dellacherie (2003; France)</h2>




<div style="display:inline; ">
<img src="Tetris_files/photo_pierre_dellacherie.jpg" id="ID_photo_pierre_dellacherie_jpg" alt="photo_pierre_dellacherie.jpg" height="385" width="225"></div>




<div style="display:inline; ">
<img src="Tetris_files/flag_france.jpg" id="ID_flag_france_jpg" alt="flag_france.jpg" height="85" width="128"></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Pierre Dellacherie (2003; France), developer of the best one-piece Tetris-playing algorithm in the world</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The best one-piece, real-time Tetris algorithm to my knowledge was created by Pierre Dellacherie of France.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
His amazing algorithm sometimes fills more than 2 million rows!</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The average performance is on the order of 650000 rows.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The algorithm takes very little memory, and runs at high speed (about 160 rows per second on my 800 MHz computer).</div>


<div class="vpad16"></div>
<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>Performance of Pierre Dellacherie's algorithm:</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
My current model for the performance of Tetris AIs is that for any given
 piece there is a constant probability that the game will terminate, <b>p</b>.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Thus, the probability that a piece will not terminate a game is <b>q=(1-p)</b>.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The probability of the game terminating after <b>k</b> moves is simply the product of the probability of surviving <b>(k-1)</b> moves, namely <b>q^(k-1)</b>, and the probability of the terminating on the next move, namely <b>p</b>.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
This corresponds to a "Geometric Distribution":</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
Geometric&nbsp;Distribution:<br>
<br>
P(k)&nbsp;=&nbsp;&nbsp;p&nbsp;*&nbsp;[(1-p)^(k-1)]&nbsp;=&nbsp;p&nbsp;*&nbsp;[q^(k-1)]&nbsp;&nbsp;=&nbsp;p&nbsp;*&nbsp;exp[ln(q)&nbsp;*&nbsp;(k-1)]<br>
<br>
MEAN:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1/p]<br>
VARIANCE:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[q/(p*p)]<br>
STANDARD&nbsp;DEVIATION:&nbsp;&nbsp;sqrt(&nbsp;VARIANCE&nbsp;)</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
For small <b>p</b>, <b>ln(q)</b> is roughly <b>(-p)</b>, and we have the following:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
Exponential&nbsp;Distribution:<br>
<br>
P(k)&nbsp;=&nbsp;&nbsp;p&nbsp;*&nbsp;exp[-p&nbsp;*&nbsp;(k-1)]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;p&nbsp;*&nbsp;exp[-p&nbsp;*&nbsp;&nbsp;k&nbsp;&nbsp;&nbsp;]&nbsp;approximately<br>
<br>
MEAN:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1/p]<br>
VARIANCE:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1/(p*p)]<br>
STANDARD&nbsp;DEVIATION:&nbsp;&nbsp;sqrt(&nbsp;VARIANCE&nbsp;)</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
We expect the fraction of the total number of played games to terminate with a number of completed rows in the interval <b>[k1, k2]</b> to be:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
Integral&nbsp;of&nbsp;the&nbsp;Exponential&nbsp;Distribution:<br>
<br>
I(k1,k2)&nbsp;=&nbsp;exp[-p&nbsp;*&nbsp;k1]&nbsp;-&nbsp;exp[-p&nbsp;*&nbsp;k2]</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
After completing 36 games on my computer, over a period of two days, I found a an average of 674827 completed rows.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
According to the general theory above, I would expect the following 
relative fraction of games to finish in the following completed row 
ranges:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
p&nbsp;=&nbsp;(1/674827)&nbsp;=&nbsp;0.000001482&nbsp;=&nbsp;1.482*10^(-6)<br>
<br>
&nbsp;&nbsp;Completed&nbsp;Row&nbsp;Range&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Relative&nbsp;Fraction&nbsp;of&nbsp;Total&nbsp;Games<br>
=======================&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;...&nbsp;&nbsp;&nbsp;400&nbsp;000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[exp(&nbsp;0&nbsp;&nbsp;&nbsp;)-exp(-0.59)]&nbsp;=&nbsp;0.447<br>
&nbsp;&nbsp;400&nbsp;000&nbsp;...&nbsp;&nbsp;&nbsp;800&nbsp;000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[exp(-0.59)-exp(-1.19)]&nbsp;=&nbsp;0.250<br>
&nbsp;&nbsp;800&nbsp;000&nbsp;...&nbsp;1&nbsp;200&nbsp;000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[exp(-1.19)-exp(-1.78)]&nbsp;=&nbsp;0.135<br>
1&nbsp;200&nbsp;000&nbsp;...&nbsp;1&nbsp;600&nbsp;000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[exp(-1.78)-exp(-2.37)]&nbsp;=&nbsp;0.075<br>
1&nbsp;600&nbsp;000&nbsp;...&nbsp;2&nbsp;000&nbsp;000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[exp(-2.37)-exp(-2.96)]&nbsp;=&nbsp;0.042<br>
2&nbsp;000&nbsp;000&nbsp;...&nbsp;2&nbsp;400&nbsp;000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[exp(-2.96)-exp(-3.55)]&nbsp;=&nbsp;0.023</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Here is a graph that compares the Exponential Distribution theory with the observed distribution of games.</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_pdellacherie_exponential_theory01.jpg" id="ID_tetris_pdellacherie_exponential_theory01_jpg" alt="tetris_pdellacherie_exponential_theory01.jpg" height="480" width="640"><br><div style="display: inline; ">
<i>Performance of Pierre's algorithm over 36 completed games</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Although there are very few games in this data set, it is apparent that 
the model is fairly good at matching the observed distribution.</div>


<div class="vpad16"></div>
<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>Pierre's introduction to his algorithm:</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Pierre started work on this one-piece algorithm in 2003.1.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Pierre sent me an e-mail about his algorithm on 2003.4.9, reporting the following performance over 20 consecutive games:</div>


<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
Game&nbsp;&nbsp;1&nbsp;:&nbsp;&nbsp;1&nbsp;213&nbsp;220&nbsp;rows<br>
Game&nbsp;&nbsp;2&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;876&nbsp;618&nbsp;rows<br>
Game&nbsp;&nbsp;3&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;37&nbsp;327&nbsp;rows<br>
Game&nbsp;&nbsp;4&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;260&nbsp;337&nbsp;rows<br>
Game&nbsp;&nbsp;5&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;165&nbsp;349&nbsp;rows<br>
Game&nbsp;&nbsp;6&nbsp;:&nbsp;&nbsp;2&nbsp;288&nbsp;991&nbsp;rows<br>
Game&nbsp;&nbsp;7&nbsp;:&nbsp;&nbsp;1&nbsp;112&nbsp;094&nbsp;rows<br>
Game&nbsp;&nbsp;8&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;138&nbsp;648&nbsp;rows<br>
Game&nbsp;&nbsp;9&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;107&nbsp;089&nbsp;rows<br>
Game&nbsp;10&nbsp;:&nbsp;&nbsp;1&nbsp;284&nbsp;387&nbsp;rows<br>
Game&nbsp;11&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;935&nbsp;011&nbsp;rows<br>
Game&nbsp;12&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80&nbsp;766&nbsp;rows<br>
Game&nbsp;13&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;253&nbsp;158&nbsp;rows<br>
Game&nbsp;14&nbsp;:&nbsp;&nbsp;1&nbsp;877&nbsp;331&nbsp;rows<br>
Game&nbsp;15&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;145&nbsp;034&nbsp;rows<br>
Game&nbsp;16&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;888&nbsp;081&nbsp;rows<br>
Game&nbsp;17&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;433&nbsp;694&nbsp;rows<br>
Game&nbsp;18&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;446&nbsp;rows<br>
Game&nbsp;19&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;494&nbsp;498&nbsp;rows<br>
Game&nbsp;20&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;273&nbsp;rows<br>
<br>
Average&nbsp;is&nbsp;&nbsp;&nbsp;631167&nbsp;completed&nbsp;rows.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
"The algorithm is implemented in Turbo Pascal and completes 7000 rows / min. with an Athlon 1600+."</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I converted Pierre's algorithm to C++ in 2003.6, after several e-mail 
exchanges with Pierre. We verified that the A.I. in the C++ version made
 the same decisions of the Pascal version.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I observed similar performance to his original report; average around 
650000 completed rows, and some games completing 2 million rows.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Incredible!</div>




<div class="vpad72"></div>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">10.2 Conversation with Pierre Dellacherie</h2>




<div class="vpad24"></div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>[1] When did you first create this code?</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I have been working on the algorithm from late January 2003 until now.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>[2] How long have you worked on it?</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I worked on it almost every week... but not everyday long because I have
 other activities : unfortunately I have to earn money like anyone else !</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>[3] What inspired the design of the code?</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I played Tetris 10 or 15 years ago but I hadn't played again for a long 
time. I would say that I am an "average" player who knows the rules and 
some tricks.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
However, when I began to work on the algorithm I didn't play so much 
because I found it was rather more effective to watch the computer 
playing and analyze his weaknesses.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>[4] Did you use any automation to "train" your code to perform better? Did you have any feedback to improve the algorithm?</b></div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Or did you simply watch the results and decide to make modifications?</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I'm from "old school" : I simply watched the results and decided to make modifications.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
"Automatic learning" is a type of meta-algorithm so I am not assured 
that doing it this way would get easier as this meta-algorithm would 
have to be built too and that is not so easy !</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
What's more, I do agree with Roger Penrose when he says (in his book 
"Shadows of the mind") that human's understanding and intuition cannot 
be algorithmic (example: computable).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>[5] When did you first start playing Tetris, and when did you have the idea of solving Tetris with an A.I.?</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I teach algorithmic and computer programming (Turbo Pascal and Scilab) 
for students who train for entrance examination at graduate engineer's 
schools.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
At first, "Computer plays Tetris" was an idea I wanted to develop for my next year students.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I wasn't aware of your web page when I began to work on the algorithm.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Indeed I was lucky to be aware of your web page only a few weeks ago 
because I think I would have been discouraged by your results (as you 
might guess, the early versions of my algorithm didn't play so well !).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>[6] What is your current status?</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I'm almost 30 [before 2003 April 27]. I have several activities : I'm a 
cellist, I compose music and I teach computer programming.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I have a master degree in musicology (1994) and an "Artificial Intelligence and Algorithmic" diploma (1998).</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In France this diploma corresponds to the 5th year studying at 
University (4th year is the master degree and 6th year is the thesis).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Pierre's compositions:</div>




<div style="display:inline; display: inline; ">
<a style="display: inline; " href="http://perso.club-internet.fr/dellache/Personnel/scores2.html">http://perso.club-internet.fr/dellache/Personnel/scores2.html</a></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>[7] Where do you live?</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I'm French and I live in Rouen (Normandy).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
<b>[8] Other comments:</b></div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Eventually I haven't any new idea to improve it.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I have tried so much useless (and silly) things that I doubt it could be improved.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
On the other hand, I think there might exist completely different algorithms which could have better performances.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
By the way, a faster test consist in launching the pieces in a half-box 
(10 rows X 10 columns) : in a half-box, my algorithm makes an average of
 280 completed rows.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
One more thing : the algorithm can be easily altered in a double-ply algorithm ([I will do] the tests soon).</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I love film music : becoming a film composer is part of my main dreams (but it's just dream !).</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">11. Best human player in the world</h1>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">11.1 Japanese Tetris Master (2001 January 27) video</h2>




<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 128px; max-width: 800px; ">
<img src="Tetris_files/flag_japan.jpg" id="ID_flag_japan_jpg" alt="flag_japan.jpg" height="85" width="128"></div>
</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<a href="http://www.colinfahey.com/tetris/TetrisJapanFinals.mpeg"><img src="Tetris_files/tetris_japanese_master_2001_frame.jpg" id="ID_tetris_japanese_master_2001_frame_jpg" alt="tetris_japanese_master_2001_frame.jpg" height="523" width="640"></a><br><div style="display: inline; ">
<i>Tetris master (2001; Japan) video</i></div>
</div>
</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Arika presents the Japanese Tetris Finals master (2001 January 27). "TETRIS THE ABSOLUTE PLUS --The Grandmaster2-- DEATH-MODE"</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">12. Feedback</h1>


<div class="vpad48"></div>
<h2 style="display: block; background-color: #ffffff; ">12.1 Slashdot thread (2003)</h2>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In 2003, my Tetris A.I. project was discussed on the Slashdot Internet forum (<a style="display: inline; color: #0000ff; " href="http://slashdot.org/">http://slashdot.org</a>).</div>


<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/tetris_slashdot_article_headlines.jpg" id="ID_tetris_slashdot_article_headlines_jpg" alt="tetris_slashdot_article_headlines.jpg" height="523" width="640"><br><div style="display: inline; ">
<i>Slashdot (<a style="display: inline; color: #0000ff; " href="http://slashdot.org/">http://slashdot.org</a>) Internet forum headline for a discussion of my Tetris A.I. project</i></div>
</div>
</div>


<div class="vpad16"></div>
<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
Benefactor&nbsp;of&nbsp;mankind--thank&nbsp;you!&nbsp;(Score:4,&nbsp;Funny)<br>
by&nbsp;EnlightenmentFan&nbsp;(617608)&nbsp;on&nbsp;Tuesday&nbsp;January&nbsp;28,&nbsp;@02:29PM<br>
(#5176294)<br>
(http://betsydevine.weblogger.com/&nbsp;|&nbsp;Last&nbsp;Journal:&nbsp;Tuesday<br>
January&nbsp;21,&nbsp;@01:55PM)<br>
<br>
Now&nbsp;I&nbsp;can&nbsp;set&nbsp;up&nbsp;computer&nbsp;#1&nbsp;to&nbsp;play&nbsp;an&nbsp;infinite,&nbsp;obsessive<br>
game&nbsp;of&nbsp;Tetris&nbsp;on&nbsp;computer&nbsp;#2,&nbsp;leaving&nbsp;me&nbsp;free&nbsp;at&nbsp;last&nbsp;to&nbsp;sit<br>
down&nbsp;at&nbsp;computer&nbsp;#3&nbsp;and&nbsp;get&nbsp;some&nbsp;work&nbsp;done.&nbsp;The&nbsp;$200&nbsp;for<br>
webcam&nbsp;and&nbsp;other&nbsp;hardware&nbsp;is&nbsp;cheap&nbsp;for&nbsp;an&nbsp;invention&nbsp;like&nbsp;this,<br>
with&nbsp;the&nbsp;revolutionary&nbsp;potential&nbsp;of&nbsp;the&nbsp;wheel,&nbsp;or&nbsp;fire,&nbsp;or<br>
even&nbsp;pizza&nbsp;delivery.<br>
<br>
Thank&nbsp;you!&nbsp;Thank&nbsp;you!&nbsp;Thank&nbsp;you!<br>
<br>
[&nbsp;Reply&nbsp;to&nbsp;This&nbsp;]</div>


<div class="vpad16"></div>
<div class="vpad16"></div>


<div style="background-color: #ffffff; font-family: 'Courier New',courier,monospace,arial,helvetica,sans-serif; white-space: nowrap; padding-left: 64px; padding-right: 64px; padding-top: 16px; padding-bottom: 16px; border-width: 1px; border-color: #000000; border-style: solid; ">
The&nbsp;New&nbsp;4th&nbsp;law...&nbsp;(Score:5,&nbsp;Funny)<br>
by&nbsp;gokubi&nbsp;(413425)&nbsp;on&nbsp;Tuesday&nbsp;January&nbsp;28,&nbsp;@02:09PM&nbsp;(#5176135)<br>
(http://www.gokubi.com/kinggeorge)<br>
<br>
1.&nbsp;A&nbsp;robot&nbsp;may&nbsp;not&nbsp;injure&nbsp;a&nbsp;human&nbsp;being,&nbsp;or,&nbsp;through&nbsp;inaction,<br>
allow&nbsp;a&nbsp;human&nbsp;being&nbsp;to&nbsp;come&nbsp;to&nbsp;harm.<br>
<br>
2.&nbsp;A&nbsp;robot&nbsp;must&nbsp;obey&nbsp;the&nbsp;orders&nbsp;given&nbsp;it&nbsp;by&nbsp;human&nbsp;beings<br>
except&nbsp;where&nbsp;such&nbsp;orders&nbsp;would&nbsp;conflict&nbsp;with&nbsp;the&nbsp;First&nbsp;Law.<br>
<br>
3.&nbsp;A&nbsp;robot&nbsp;must&nbsp;protect&nbsp;its&nbsp;own&nbsp;existence&nbsp;as&nbsp;long&nbsp;as&nbsp;such<br>
protection&nbsp;does&nbsp;not&nbsp;conflict&nbsp;with&nbsp;the&nbsp;First&nbsp;or&nbsp;Second&nbsp;Law.<br>
<br>
4.&nbsp;A&nbsp;robot&nbsp;must&nbsp;never&nbsp;place&nbsp;the&nbsp;long&nbsp;skinny&nbsp;ones&nbsp;horizontally,<br>
unless&nbsp;it&nbsp;leads&nbsp;to&nbsp;a&nbsp;long&nbsp;skinny&nbsp;vertical&nbsp;hole&nbsp;so&nbsp;4&nbsp;rows&nbsp;can<br>
be&nbsp;cleared&nbsp;at&nbsp;once&nbsp;the&nbsp;next&nbsp;time&nbsp;a&nbsp;long&nbsp;skinny&nbsp;one&nbsp;comes<br>
around.<br>
<br>
[&nbsp;Reply&nbsp;to&nbsp;This&nbsp;]<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Re:The&nbsp;New&nbsp;4th&nbsp;law...&nbsp;(Score:5,&nbsp;Funny)<br>
&nbsp;&nbsp;&nbsp;&nbsp;by&nbsp;GuyMannDude&nbsp;(574364)&nbsp;on&nbsp;Tuesday&nbsp;January&nbsp;28,<br>
&nbsp;&nbsp;&nbsp;&nbsp;@02:14PM&nbsp;(#5176179)<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;I&nbsp;thought&nbsp;Directive&nbsp;4&nbsp;was&nbsp;that&nbsp;any&nbsp;attempt&nbsp;to&nbsp;arrest&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;senior&nbsp;officer&nbsp;of&nbsp;OCP&nbsp;Corporation&nbsp;would&nbsp;result&nbsp;in<br>
&nbsp;&nbsp;&nbsp;&nbsp;immediate&nbsp;shutdown!<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;GMD<br>
&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;Reply&nbsp;to&nbsp;This&nbsp;|&nbsp;Parent&nbsp;]</div>


<div class="vpad16"></div>
<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/fullarb_hotmail_com_tetris_ed209.jpg" id="ID_fullarb_hotmail_com_tetris_ed209_jpg" alt="fullarb_hotmail_com_tetris_ed209.jpg" height="378" width="640"><br><div style="display: inline; ">
<i>Comic inspired by my Tetris A.I. project (2003) (the first time I've ever inspired a comic!)</i></div>
</div>
</div>


<div class="vpad16"></div>
<div class="vpad16"></div>


<div style="display:inline; ">
<div style="margin-left:auto; margin-right:auto; width: 640px; max-width: 800px; ">
<img src="Tetris_files/fullarb_hotmail_com_tetris_ed209_02.jpg" id="ID_fullarb_hotmail_com_tetris_ed209_02_jpg" alt="fullarb_hotmail_com_tetris_ed209_02.jpg" height="547" width="640"><br><div style="display: inline; ">
<i>Comic inspired by my Tetris A.I. project (2003) (the second time I've ever inspired a comic!)</i></div>
</div>
</div>


<div class="vpad96"></div>
<h1 style="display: block; background-color: #ffffff; ">13. History of the Tetris A.I. project</h1>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In the spring of 1989 I was busy skipping (and failing) second-semester freshman classes at the University of Pennsylvania.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
One of my roommates, Bill Matthews, had the Mac Classic, and sometimes played video games.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
People who get admitted to Ivy League schools are typically inclined to 
compete with other people at all times -- so when Bill got the game 
Tetris for his Mac, we immediately started a long-term battle for the 
high score.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
As the scores climbed, the time investment required to make a small gain dramatically increased.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
To make a long story short, Bill supposedly holds the high score between
 us, but I suspect him of using ResEdit and hacking the score file!</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Bill had classes in the Wharton school of business, the alma mater of 
Michael Milken and Donald Trump, so it's not inconceivable that someone 
rigged an impossibly high score...</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In the summer of 1990 I borrowed a 30 MHz Intel 80386 IBM PC from my roommate, Alex Haidas.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I bought a Mac keyboard at a flea market for $1.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I built parallel port circuitry to allow the PC to control the Mac keyboard.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
(I used a CMOS 4040 chip to act as a type of solid-state relay to join keyboard contacts inside the Mac keyboard.)</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I wrote a computer program that used a decision tree as its strategy for
 playing the game Tetris. In just a few weeks I had a PC playing the 
Tetris game running on a Mac.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
However, I was required to use the PC keyboard to tell the A.I. about each falling piece on the screen.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I started working on a circuit using CdS (Cadmium Sulfide) light 
detectors that would lean against the Mac screen and "see" the falling 
pieces, but CdS sensors reacted too slowly to changes in brightness, and
 the contrast between Tetris pieces and the background on the Mac 
Classic screen was too low to reliably discriminate.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In those days I did not have much money, so it was too risky to buy a $2
 Radio Shack phototransistor that might not do what I wanted.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Also, given the contrast problem, I was pessimistic about the whole approach.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
When I bought my first personal computer in 1996, I could not get 
software under Windows 95 on a 100 MHz CPU to do video processing fast 
enough to make a simple vision system work.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I wrote the image processing code in assembly language, but there was so
 much overhead before my code actually received video data that it 
seemed impossible to do anything worthwhile.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In 2003, technology, particularly CPU speed, had reached a level that made finishing the project almost trivial.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I dug up my old personal project and finally finished it, getting some sense of closure.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
It was very exciting to see one computer playing another computer through the USB video camera and the relays.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
The sound of the relays clicking, and watching the pieces spin and drop 
at ridiculous, superhuman speeds, made the experience very satisfying in
 a multisensory way.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In 2003, my work was recognized by Slashdot (<a style="display: inline; color: #0000ff; " href="http://slashdot.org/">http://slashdot.org</a>), and I received a lot of great feedback.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I was invited to appear on the "Screen Savers" television show on the TechTV digital television network.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I went to San Francisco and appeared on the show, and the experience was great.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
Later in 2003, I received a message from Henk Rogers, inviting me to 
Hawaii to meet him and Alexey Pajitnov to talk about establishing some 
sort of standard for Tetris, for the purposes of having Tetris 
tournaments.</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
One particular interest was enabling players to use mobile phones to 
"compete with each other", indirectly, via A.I. that imitates players 
(by prior analysis of each player's actions), thus avoiding the effects 
of mobile phone Internet access latency, and enabling players to 
"compete against"* the very best human players in the world (*...or, 
rather, A.I. imitating the very best human players in the world).</div>




<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
I was thrilled by the prospect of meeting the creator of Tetris. 
Unfortunately, flying makes me anxious, and I declined the invitation.</div>


<div class="vpad16"></div>


<div style="display: inline; background-color: #ffffff; padding-left: 0px; padding-right: 0px; padding-top: 0px; padding-bottom: 0px; border-width: 0px; border-color: #000000; ">
In 2006, I converted my "Standard Tetris" software from C++ to C# to 
make the software more accessible and useful to contemporary 
programmers.</div>




<div class="vpad96"></div>



<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->

<p>Notes about possible future modifications to this article:</p>

<p>
2012 July : A research paper:
<br>
<br>
<a href="">http://hal.archives-ouvertes.fr/docs/00/41/89/54/PDF/article.pdf</a>

</p>

<div class="vpad96"></div>


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->


<div><a style="font-family: arial,helvetica,sans-serif; font-size: 22px;" href="http://colinfahey.com/index.html">colinfahey.com</a></div>


<div class="vpad8"></div>


<div><a style="font-family: arial,helvetica,sans-serif; font-weight: normal; font-size: 13px;" href="http://colinfahey.com/contact/contact.php">contact information</a></div>


<div class="vpad32"></div>


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->




<div class="vpad48"></div>




<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->




















        </body><!-- ###################################################################### --><!-- ###################################################################### --><!-- ###################################################################### --><!-- ###################################################################### --></html>
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->